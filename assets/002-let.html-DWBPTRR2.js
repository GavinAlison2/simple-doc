import{_ as n,c as a,e,o as l}from"./app-DQJzW1CO.js";const i={};function t(p,s){return l(),a("div",null,s[0]||(s[0]=[e(`<h1 id="let" tabindex="-1"><a class="header-anchor" href="#let"><span>let</span></a></h1><h2 id="顶层对象的属性" tabindex="-1"><a class="header-anchor" href="#顶层对象的属性"><span>顶层对象的属性</span></a></h2><p>顶层对象，在浏览器环境指的是window对象，在 Node 指的是global对象。ES5 之中，顶层对象的属性与全局变量是等价的。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">window<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">a <span class="token comment">// 1</span></span>
<span class="line">a <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span></span>
<span class="line">window<span class="token punctuation">.</span>a <span class="token comment">// 2</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从 ES6 开始，全局变量将逐步与顶层对象的属性脱钩。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 如果在 Node 的 REPL 环境，可以写成 global.a</span></span>
<span class="line"><span class="token comment">// 或者采用通用方法，写成 this.a</span></span>
<span class="line">window<span class="token punctuation">.</span>a <span class="token comment">// 1</span></span>
<span class="line"><span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">window<span class="token punctuation">.</span>b <span class="token comment">// undefined</span></span>
<span class="line">global<span class="token punctuation">.</span>b <span class="token comment">// undefined</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="globalthis-对象" tabindex="-1"><a class="header-anchor" href="#globalthis-对象"><span>globalThis 对象</span></a></h2><p>顶层对象在各种实现里面是不统一的。</p><ul><li>浏览器里面，顶层对象是window，但 Node 和 Web Worker 没有window。</li><li>浏览器和 Web Worker 里面，self也指向顶层对象，但是 Node 没有self。</li><li>Node 里面，顶层对象是global，但其他环境都不支持。</li></ul><p>this变量</p><ul><li>全局环境中，this会返回顶层对象。但是，Node 模块和 ES6 模块中，this返回的是当前模块。</li><li>函数里面的this，如果函数不是作为对象的方法运行，而是单纯作为函数运行，this会指向顶层对象。但是，严格模式下，这时this会返回undefined。</li><li>不管是严格模式，还是普通模式，new Function(&#39;return this&#39;)()，总是会返回全局对象。</li></ul>`,11)]))}const o=n(i,[["render",t]]),d=JSON.parse('{"path":"/guide/es6/002-let.html","title":"let","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"顶层对象的属性","slug":"顶层对象的属性","link":"#顶层对象的属性","children":[]},{"level":2,"title":"globalThis 对象","slug":"globalthis-对象","link":"#globalthis-对象","children":[]}],"git":{"updatedTime":1744907061000,"contributors":[{"name":"alice","username":"alice","email":"921757697@qq.com","commits":1,"url":"https://github.com/alice"}],"changelog":[{"hash":"6865a6735449381c1fba9a14aa9ad0c9bd2e80fc","time":1744907061000,"email":"921757697@qq.com","author":"alice","message":"deploy"}]},"filePathRelative":"guide/es6/002-let.md"}');export{o as comp,d as data};
