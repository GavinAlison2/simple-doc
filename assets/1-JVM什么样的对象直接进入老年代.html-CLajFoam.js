import{_ as a,c as i,e as o,o as c}from"./app-DN6Q4pKI.js";const l={};function r(d,e){return c(),i("div",null,e[0]||(e[0]=[o('<h1 id="jvm什么样的对象直接进入老年代" tabindex="-1"><a class="header-anchor" href="#jvm什么样的对象直接进入老年代"><span>JVM什么样的对象直接进入老年代？</span></a></h1><h2 id="面试题" tabindex="-1"><a class="header-anchor" href="#面试题"><span>面试题</span></a></h2><p>为什么设置这些机制，让对象直接进入老年代？</p><h2 id="进入老年代的方法" tabindex="-1"><a class="header-anchor" href="#进入老年代的方法"><span>进入老年代的方法</span></a></h2><ul><li><p>大对象直接进入老年代， 什么是大对象呢？由JVM定义的参数值决定的，但是这个参数只在<code>Serial</code>和<code>ParNew</code>中生效, <code>-XX:PretenureSizeThreshold=10MB</code>以上对象直接进入老年代,</p></li><li><p>长期存活的对象将进入老年代 长期存活的对象是指经过一定次数GC后仍然存活的对象，比如经过10次GC后仍然存活的对象， 这个次数可以通过<code>-XX:MaxTenuringThreshold</code>参数设置，默认是15次。</p></li><li><p>动态年龄判定后决定是否进入老年代 当 Survivor 空间不足时，JVM会将部分对象直接进入老年代，这个过程叫做动态年龄判定， 这个过程是JVM根据对象的年龄来判断的，如果对象的年龄超过了<code>-XX:MaxTenuringThreshold</code>设定的阈值， 则会直接进入老年代。 当survior区域存活对象的总大小占用了survior区域的50%,那么此时将按照对象的存活年龄从小到大进行排序，然后依次累加，当累加到对象大小超过50%，则将大于等于当前对象年龄的存活对象全部挪到老年代.</p></li></ul><blockquote><p>https://www.bilibili.com/video/BV1AT42197jB?spm_id_from=333.788.videopod.episodes&amp;vd_source=5a41e8ae8c0a4c2c6809a5ccf977c1a9</p></blockquote>',6)]))}const s=a(l,[["render",r]]),n=JSON.parse('{"path":"/guide/JVM/1-JVM%E4%BB%80%E4%B9%88%E6%A0%B7%E7%9A%84%E5%AF%B9%E8%B1%A1%E7%9B%B4%E6%8E%A5%E8%BF%9B%E5%85%A5%E8%80%81%E5%B9%B4%E4%BB%A3.html","title":"JVM什么样的对象直接进入老年代？","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"面试题","slug":"面试题","link":"#面试题","children":[]},{"level":2,"title":"进入老年代的方法","slug":"进入老年代的方法","link":"#进入老年代的方法","children":[]}],"git":{"updatedTime":1746194446000,"contributors":[{"name":"alice","username":"alice","email":"921757697@qq.com","commits":2,"url":"https://github.com/alice"}],"changelog":[{"hash":"4951c196adb449238836dbb0eba9d13fbc2594be","time":1746194446000,"email":"921757697@qq.com","author":"alice","message":"deploy jvm"},{"hash":"3a27593279a74287e81e60f7c40dd5271d54aaf2","time":1746110672000,"email":"921757697@qq.com","author":"alice","message":"deploy jvm"}]},"filePathRelative":"guide/JVM/1-JVM什么样的对象直接进入老年代.md"}');export{s as comp,n as data};
