import{_ as l,c as e,d as i,o as p}from"./app-BSIdeD4V.js";const h={};function n(s,a){return p(),e("div",null,a[0]||(a[0]=[i('<h1 id="数据仓库工具箱-笔记" tabindex="-1"><a class="header-anchor" href="#数据仓库工具箱-笔记"><span>数据仓库工具箱-笔记</span></a></h1><blockquote><p>一些名词， 工具， 原理， 架构， 设计模式， 最佳实践等的笔记。</p></blockquote><p>名词</p><h3 id="_1-数据仓库、商业智能及维度建模初步" tabindex="-1"><a class="header-anchor" href="#_1-数据仓库、商业智能及维度建模初步"><span>1. 数据仓库、商业智能及维度建模初步</span></a></h3><ul><li>信息对于系统有两个作用：</li></ul><ol><li>一个是保存</li><li>一个是分析</li></ol><blockquote><p>OLTP-保存数据：<br> 面向用户的应用开发，比如网站后台数据库，MySQL等概念<br> 不维护历史数据，仅保留最新的系统状态<br> 强事务性，更快的处理事务，一次处理一个事务</p><p>OLAP-分析数据：</p><p>面向数据分析的开发，数据分析，大数据、数仓的概念<br> 维护历史数据，数据量大<br> 一次处理多个事务</p></blockquote><ul><li>数仓和商业智能的目标</li></ul><blockquote><p>方便的存取信息<br> 以一致的形式展现信息<br> 能适应变化<br> 即使的展现信息<br> 称为保护信息菜户的安全堡垒<br> 称为提高决策指定能力的权威和可行的基础<br> 成功的标志是业务群体接收DW/BI系统（愿意用和相信其价值）</p></blockquote><h3 id="_2-维度建模简介" tabindex="-1"><a class="header-anchor" href="#_2-维度建模简介"><span>2. 维度建模简介</span></a></h3><p>维度建模可以满足：</p><ul><li>以商业用户可以理解的方式发布数据</li><li>提供高效的查询性能</li></ul><h4 id="_2-1-星型模式与olap多维数据库" tabindex="-1"><a class="header-anchor" href="#_2-1-星型模式与olap多维数据库"><span>2.1 星型模式与OLAP多维数据库</span></a></h4><ul><li>星型模型（传统数据库）</li><li>OLAP（hive）是多维建模的两种实现方式</li></ul><h4 id="_2-2-用于量度的事实表" tabindex="-1"><a class="header-anchor" href="#_2-2-用于量度的事实表"><span>2.2 用于量度的事实表</span></a></h4><p>事实表中每一行对应一个量度事件。每行中的数据是一个特定级别的细节数据，称为粒度。</p><p>维度建模的核心是事实表中的所有量度行（每个指标）必须是同一粒度</p><p>比如销售事实中的细节数据：美元销售额，事实表中数据最好是可加的，最好不要存放文本数据，文本数据应该放在维度表中</p><p>事实表是稀疏的，但是将消耗维度模型的90%甚至更多的空间。</p><p>事实表在行数上趋向于边长，在列上趋向于变短</p><p>事实表按照事务可划分为分为三类：</p><ul><li>事务（最常见）</li><li>周期性快照</li><li>积累快照</li></ul><p>一般事实表包含两个甚至更多的的外键，这些外键与维度表主键关联。</p><p>事实表的主键通常是外键组合在一起的组合主键，表示多个维度的集合</p><p>对应操作型数据库，事实表就是，操作型数据库中的关系表，比如学生选课表（仅仅多了对这个事实的数值属性比如各种成绩等）</p><h4 id="_2-3-用于描述环境的维度表" tabindex="-1"><a class="header-anchor" href="#_2-3-用于描述环境的维度表"><span>2.3 用于描述环境的维度表</span></a></h4><p>维度表包含与业务过程量度时间有关的文本环境，用于描述与“谁、什么、哪里、合适、如何、何时、为什么”有关的事件。</p><p>维度表通常有很多列，50~100个都很正常。</p><p>维度表趋向于包含较少的行，但是可能存在多列。</p><p>维度表由单一主键定义，用于被事实表关联参照。</p><p>维度表示查询约束（where语句）、分组（group by）、报表标识的主要来源。属性名一般为名词。可以帮助对系统的理解。尽量使用文本描述而不是代码。</p><p>区分数值属性是事实表还是维度表的方法是：</p><ul><li>如果一个数值属性包含多个值并作为计算参与者的度量——事实</li><li>如果仅是对具体值的描述，一个常量、某个约束和行标识的参与者——维度属性</li></ul><p>维度表不需要满足3NF，维度表通常数据量很小，因此不需要满足3NF</p><p>对应操作型数据库，维度表就是：操作型数据库中的实体，比如学生标表、课程表</p><h4 id="_2-4-星型模式中的维度与事实的连接" tabindex="-1"><a class="header-anchor" href="#_2-4-星型模式中的维度与事实的连接"><span>2.4 星型模式中的维度与事实的连接</span></a></h4><p>事实表存储：数值量度、多个维度外键（量度），围绕的是多个参考的维度表（环境）。</p><h3 id="_3-kimball-的-dw-bi-架构" tabindex="-1"><a class="header-anchor" href="#_3-kimball-的-dw-bi-架构"><span>3 Kimball 的 DW/BI 架构</span></a></h3><p>共有四个组成部分：源操作系统、ETL系统、数据展示和商业智能应用</p><h4 id="_3-1-源操作系统" tabindex="-1"><a class="header-anchor" href="#_3-1-源操作系统"><span>3.1 源操作系统</span></a></h4><p>行为日志 业务数据库</p><h4 id="_3-2-获取-转换-加载-etl-系统" tabindex="-1"><a class="header-anchor" href="#_3-2-获取-转换-加载-etl-系统"><span>3.2 获取-转换-加载（ETL）系统</span></a></h4><p>清洗数据 数据合并 复制数据</p><p>最后步骤</p><p>构建和加载数据到展示区域、划分维度和事实</p><ul><li>拆分组合列</li><li>反范式化（争议、本书支持）</li></ul><h4 id="_3-3-用于支持商业智能决策的展现区" tabindex="-1"><a class="header-anchor" href="#_3-3-用于支持商业智能决策的展现区"><span>3.3 用于支持商业智能决策的展现区</span></a></h4><ul><li>采用维度模型来展现。</li><li>要包含最细粒度的数据。</li><li>使用公共的、一致性的维度建立维度结构</li><li>遵循总线结构</li></ul><h4 id="_3-4-商业智能应用" tabindex="-1"><a class="header-anchor" href="#_3-4-商业智能应用"><span>3.4 商业智能应用</span></a></h4><p>查询工具、看板、可视化、推荐等</p><h3 id="_4-其他-dw-bi架构" tabindex="-1"><a class="header-anchor" href="#_4-其他-dw-bi架构"><span>4 其他 DW/BI架构</span></a></h3><h4 id="_4-1-独立数据集市架构" tabindex="-1"><a class="header-anchor" href="#_4-1-独立数据集市架构"><span>4.1 独立数据集市架构</span></a></h4><p>按部门独立建设：相当于每个部门都有自己的上面的一套</p><h4 id="_4-2-辐射状企业信息工厂inmon架构" tabindex="-1"><a class="header-anchor" href="#_4-2-辐射状企业信息工厂inmon架构"><span>4.2 辐射状企业信息工厂Inmon架构</span></a></h4><p>BI应用之前按照部门汇总，其他都是通用的。</p><h4 id="_4-3-维度建模神话" tabindex="-1"><a class="header-anchor" href="#_4-3-维度建模神话"><span>4.3 维度建模神话</span></a></h4><ul><li>维度模型仅包含汇总数据（事实应该包含细节数据）</li><li>维度模型是部门级别而不是企业级别（事实应该是按照业务过程组织而不是部门）</li><li>维度模型不可扩展（实际上可以）</li><li>尾部模型仅能用于预测（实际上应该以度量过程为中心）</li><li>维度模型不能被集成</li></ul><h3 id="_5-考虑使用维度模型的更多理由" tabindex="-1"><a class="header-anchor" href="#_5-考虑使用维度模型的更多理由"><span>5. 考虑使用维度模型的更多理由</span></a></h3><ul><li>敏捷性考虑</li></ul><h3 id="_6-本章小结" tabindex="-1"><a class="header-anchor" href="#_6-本章小结"><span>6. 本章小结</span></a></h3><ul><li>维度建模基本概念</li><li>Kimball DW/BI模型与其他模型比较</li><li>误解解释</li></ul>',61)]))}const d=l(h,[["render",n]]),c=JSON.parse('{"path":"/guide/datawarehouse/1-%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E5%B7%A5%E5%85%B7%E7%AE%B1-%E7%AC%94%E8%AE%B0.html","title":"数据仓库工具箱-笔记","lang":"zh-CN","frontmatter":{},"headers":[{"level":3,"title":"1. 数据仓库、商业智能及维度建模初步","slug":"_1-数据仓库、商业智能及维度建模初步","link":"#_1-数据仓库、商业智能及维度建模初步","children":[]},{"level":3,"title":"2. 维度建模简介","slug":"_2-维度建模简介","link":"#_2-维度建模简介","children":[]},{"level":3,"title":"3 Kimball 的 DW/BI 架构","slug":"_3-kimball-的-dw-bi-架构","link":"#_3-kimball-的-dw-bi-架构","children":[]},{"level":3,"title":"4 其他 DW/BI架构","slug":"_4-其他-dw-bi架构","link":"#_4-其他-dw-bi架构","children":[]},{"level":3,"title":"5. 考虑使用维度模型的更多理由","slug":"_5-考虑使用维度模型的更多理由","link":"#_5-考虑使用维度模型的更多理由","children":[]},{"level":3,"title":"6. 本章小结","slug":"_6-本章小结","link":"#_6-本章小结","children":[]}],"git":{"updatedTime":1743847985000,"contributors":[{"name":"alice","username":"alice","email":"921757697@qq.com","commits":2,"url":"https://github.com/alice"}],"changelog":[{"hash":"90908b83d52a069640400e54a0f3e782ea99f847","time":1743847985000,"email":"921757697@qq.com","author":"alice","message":"deploy"},{"hash":"3d61e9dd61c3cf2aecd12872bf64670c6e1bd7b8","time":1743649714000,"email":"921757697@qq.com","author":"alice","message":"deploy-5"}]},"filePathRelative":"guide/datawarehouse/1-数据仓库工具箱-笔记.md"}');export{d as comp,c as data};
