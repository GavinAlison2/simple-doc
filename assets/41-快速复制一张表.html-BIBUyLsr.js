import{_ as n,c as a,e,o as l}from"./app-DlGl6QFf.js";const p={};function t(i,s){return l(),a("div",null,s[0]||(s[0]=[e(`<h1 id="快速复制一张表" tabindex="-1"><a class="header-anchor" href="#快速复制一张表"><span>快速复制一张表</span></a></h1><ul><li>insert...select语句</li><li>利用mysqldump工具</li><li>利用mysqlimport工具</li><li>load data infile语句</li><li>物理拷贝方法</li></ul><h2 id="准备" tabindex="-1"><a class="header-anchor" href="#准备"><span>准备</span></a></h2><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code><span class="line"><span class="token keyword">create</span> <span class="token keyword">database</span> db1<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> db1<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">create</span> <span class="token keyword">table</span> t<span class="token punctuation">(</span>id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span> a <span class="token keyword">int</span><span class="token punctuation">,</span> b <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">index</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token keyword">engine</span><span class="token operator">=</span><span class="token keyword">innodb</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">delimiter</span> <span class="token punctuation">;</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">create</span> <span class="token keyword">procedure</span> idata<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">begin</span></span>
<span class="line">    <span class="token keyword">declare</span> i <span class="token keyword">int</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">set</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">while</span><span class="token punctuation">(</span>i<span class="token operator">&lt;=</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token keyword">do</span></span>
<span class="line">      <span class="token keyword">insert</span> <span class="token keyword">into</span> t <span class="token keyword">values</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>i<span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">set</span> i<span class="token operator">=</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">end</span> <span class="token keyword">while</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">end</span><span class="token punctuation">;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">delimiter</span> <span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">call</span> idata<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">create</span> <span class="token keyword">database</span> db2<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">create</span> <span class="token keyword">table</span> db2<span class="token punctuation">.</span>t <span class="token operator">like</span> db1<span class="token punctuation">.</span>t</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="insert-select语句" tabindex="-1"><a class="header-anchor" href="#insert-select语句"><span>insert...select语句</span></a></h2><p>如果可以控制对源表的扫描行数和加锁范围很小的话，我们简单地使用 insert … select 语句即可实现。</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code><span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> new_table <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> old_table<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这种方法的缺点是，如果源表数据量很大，那么复制过程会消耗大量的资源，甚至会导致数据库服务器的性能下降。</p><h2 id="利用mysqldump工具" tabindex="-1"><a class="header-anchor" href="#利用mysqldump工具"><span>利用mysqldump工具</span></a></h2><p>mysqldump 工具可以用来导出和导入数据库中的数据。我们可以利用 mysqldump 工具导出源表的数据，然后导入到新表中。</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code><span class="line">mysqldump <span class="token operator">-</span>u root <span class="token operator">-</span>p old_db old_table <span class="token operator">&gt;</span> old_table<span class="token punctuation">.</span><span class="token keyword">sql</span></span>
<span class="line"></span>
<span class="line">mysqldump <span class="token operator">-</span>h$host <span class="token operator">-</span>P$port <span class="token operator">-</span>u$<span class="token keyword">user</span> <span class="token comment">--add-locks=0 --no-create-info --single-transaction  --set-gtid-purged=OFF db1 t --where=&quot;a&gt;900&quot; --result-file=/client_tmp/t.sql</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后导入到新表中：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code><span class="line">mysql <span class="token operator">-</span>u root <span class="token operator">-</span>p new_db <span class="token operator">&lt;</span> old_table<span class="token punctuation">.</span><span class="token keyword">sql</span></span>
<span class="line"></span>
<span class="line">mysql <span class="token operator">-</span>u root <span class="token operator">-</span>p new_db <span class="token operator">&lt;</span> t<span class="token punctuation">.</span><span class="token keyword">sql</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="利用mysqlimport工具" tabindex="-1"><a class="header-anchor" href="#利用mysqlimport工具"><span>利用mysqlimport工具</span></a></h2><p>mysqlimport 工具可以用来导入数据到数据库中。我们可以利用 mysqlimport 工具导入源表的数据到新表中。</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code><span class="line">mysqlimport <span class="token operator">-</span>u root <span class="token operator">-</span>p new_db old_table<span class="token punctuation">.</span><span class="token keyword">sql</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="load-data-infile语句" tabindex="-1"><a class="header-anchor" href="#load-data-infile语句"><span>load data infile语句</span></a></h2><p>load data infile 语句可以用来导入数据到数据库中。我们可以利用 load data infile 语句导入源表的数据到新表中。</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code><span class="line"><span class="token comment">-- export data to csv file</span></span>
<span class="line"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> db1 <span class="token keyword">where</span> a <span class="token operator">&gt;</span> <span class="token number">900</span> <span class="token keyword">into</span> <span class="token keyword">outfile</span> <span class="token string">&#39;/client_tmp/old_table.csv&#39;</span> <span class="token keyword">fields</span> <span class="token keyword">terminated</span> <span class="token keyword">by</span> <span class="token string">&#39;,&#39;</span> <span class="token keyword">lines</span> <span class="token keyword">terminated</span> <span class="token keyword">by</span> <span class="token string">&#39;\\n&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token keyword">load</span> <span class="token keyword">data</span> <span class="token keyword">infile</span> <span class="token string">&#39;/client_tmp/old_table.txt&#39;</span> <span class="token keyword">into</span> <span class="token keyword">table</span> new_db<span class="token punctuation">.</span>t <span class="token keyword">fields</span> <span class="token keyword">terminated</span> <span class="token keyword">by</span> <span class="token string">&#39;,&#39;</span> <span class="token keyword">lines</span> <span class="token keyword">terminated</span> <span class="token keyword">by</span> <span class="token string">&#39;\\n&#39;</span> <span class="token punctuation">(</span>id<span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="物理拷贝方法" tabindex="-1"><a class="header-anchor" href="#物理拷贝方法"><span>物理拷贝方法</span></a></h2><p>物理拷贝方法是指利用系统提供的拷贝功能，将源表的数据直接拷贝到新表中。</p><p>在 MySQL 5.6 版本引入了可传输表空间(transportable tablespace) 的方法，可以通过导出 + 导入表空间的方式，实现物理拷贝表的功能。</p><p>假设我们现在的目标是在 db1 库下，复制一个跟表 t 相同的表 r：</p><ol><li>执行 create table r like t，创建一个相同表结构的空表；</li><li>执行 alter table r discard tablespace，这时候 r.ibd 文件会被删除；</li><li>执行 flush table t for export，这时候 db1 目录下会生成一个 t.cfg 文件；</li><li>在 db1 目录下执行 cp t.cfg r.cfg; cp t.ibd r.ibd；这两个命令；</li><li>执行 unlock tables，这时候 t.cfg 文件会被删除；</li><li>执行 alter table r import tablespace，将这个 r.ibd 文件作为表 r 的新的表空间，由1. 于这个文件的数据内容和 t.ibd 是相同的，所以表 r 中就有了和表 t 相同的数据。</li></ol>`,24)]))}const c=n(p,[["render",t]]),r=JSON.parse('{"path":"/guide/mysql/mysql45%E8%AE%B2/41-%E5%BF%AB%E9%80%9F%E5%A4%8D%E5%88%B6%E4%B8%80%E5%BC%A0%E8%A1%A8.html","title":"快速复制一张表","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"准备","slug":"准备","link":"#准备","children":[]},{"level":2,"title":"insert...select语句","slug":"insert-select语句","link":"#insert-select语句","children":[]},{"level":2,"title":"利用mysqldump工具","slug":"利用mysqldump工具","link":"#利用mysqldump工具","children":[]},{"level":2,"title":"利用mysqlimport工具","slug":"利用mysqlimport工具","link":"#利用mysqlimport工具","children":[]},{"level":2,"title":"load data infile语句","slug":"load-data-infile语句","link":"#load-data-infile语句","children":[]},{"level":2,"title":"物理拷贝方法","slug":"物理拷贝方法","link":"#物理拷贝方法","children":[]}],"git":{"updatedTime":1746293673000,"contributors":[{"name":"alice","username":"alice","email":"921757697@qq.com","commits":1,"url":"https://github.com/alice"}],"changelog":[{"hash":"e5945ebdbc3e2b976f95add711e081bdd86f39b7","time":1746293673000,"email":"921757697@qq.com","author":"alice","message":"deploy mysql"}]},"filePathRelative":"guide/mysql/mysql45讲/41-快速复制一张表.md"}');export{c as comp,r as data};
