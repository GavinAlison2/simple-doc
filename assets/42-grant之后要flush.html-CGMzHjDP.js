import{_ as n,c as a,e,o as l}from"./app-DN6Q4pKI.js";const p={};function t(o,s){return l(),a("div",null,s[0]||(s[0]=[e(`<h1 id="_42-grant之后要flush" tabindex="-1"><a class="header-anchor" href="#_42-grant之后要flush"><span>42-grant之后要flush</span></a></h1><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code><span class="line"><span class="token keyword">create</span> <span class="token keyword">user</span> <span class="token string">&#39;ua&#39;</span><span class="token variable">@&#39;%&#39;</span> identified <span class="token keyword">by</span> <span class="token string">&#39;ua123&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这条命令做了两个动作：</p><ol><li><p>磁盘上，往 mysql.user 表里插入一行，由于没有指定权限，所以这行数据上所有表示权限的字段的值都是 N；</p></li><li><p>内存里，往数组 acl_users 里插入一个 acl_user 对象，这个对象的 access 字段值为 0。</p></li></ol><h2 id="全局权限" tabindex="-1"><a class="header-anchor" href="#全局权限"><span>全局权限</span></a></h2><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code><span class="line"><span class="token comment">// 增加权限</span></span>
<span class="line"><span class="token keyword">grant</span> <span class="token keyword">all</span> <span class="token keyword">privileges</span> <span class="token keyword">on</span> <span class="token operator">*</span><span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">to</span> <span class="token string">&#39;ua&#39;</span><span class="token variable">@&#39;%&#39;</span> <span class="token keyword">with</span> <span class="token keyword">grant</span> <span class="token keyword">option</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 取消权限</span></span>
<span class="line"><span class="token keyword">revoke</span> <span class="token keyword">all</span> <span class="token keyword">privileges</span> <span class="token keyword">on</span> <span class="token operator">*</span><span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">from</span> <span class="token string">&#39;ua&#39;</span><span class="token variable">@&#39;%&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将上述第1步权限字段的值 N 全改为 Y；把上述第2步内存数组 acl_users 全改为1。</p><h2 id="db-权限" tabindex="-1"><a class="header-anchor" href="#db-权限"><span>db 权限</span></a></h2><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code><span class="line"><span class="token keyword">grant</span> <span class="token keyword">all</span> <span class="token keyword">privileges</span> <span class="token keyword">on</span> db1<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">to</span> <span class="token string">&#39;ua&#39;</span><span class="token variable">@&#39;%&#39;</span> <span class="token keyword">with</span> <span class="token keyword">grant</span> <span class="token keyword">option</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>grant 操作对于已经存在的连接的影响，在全局权限和基于 db 的权限效果是不同的。如果当前会话已经处于某一个 db 里面， use 这个库的时候拿到的库权限会保存在会话变量中，所以 revoke 会不生效。</p><h2 id="表权限和列权限" tabindex="-1"><a class="header-anchor" href="#表权限和列权限"><span>表权限和列权限</span></a></h2><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code><span class="line"><span class="token keyword">create</span> <span class="token keyword">table</span> db1<span class="token punctuation">.</span>t1<span class="token punctuation">(</span>id <span class="token keyword">int</span><span class="token punctuation">,</span> a <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">grant</span> <span class="token keyword">all</span> <span class="token keyword">privileges</span> <span class="token keyword">on</span> db1<span class="token punctuation">.</span>t1 <span class="token keyword">to</span> <span class="token string">&#39;ua&#39;</span><span class="token variable">@&#39;%&#39;</span> <span class="token keyword">with</span> <span class="token keyword">grant</span> <span class="token keyword">option</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">GRANT</span> <span class="token keyword">SELECT</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">INSERT</span> <span class="token punctuation">(</span>id<span class="token punctuation">,</span>a<span class="token punctuation">)</span> <span class="token keyword">ON</span> mydb<span class="token punctuation">.</span>mytbl <span class="token keyword">TO</span> <span class="token string">&#39;ua&#39;</span><span class="token variable">@&#39;%&#39;</span> <span class="token keyword">with</span> <span class="token keyword">grant</span> <span class="token keyword">option</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="flush-privileges-使用场景" tabindex="-1"><a class="header-anchor" href="#flush-privileges-使用场景"><span>flush privileges 使用场景</span></a></h2><p>正常情况下，grant 命令之后，没有必要跟着执行 flush privileges 命令，因为会同时刷新内存数据。 但当数据表中的权限数据跟内存中的权限数据不一致的时候，flush privileges 语句可以用来重建内存数据，达到一致状态。这种不一致往往是由不规范的操作导致的，比如直接用 DML 语句操作系统权限表。</p>`,14)]))}const c=n(p,[["render",t]]),r=JSON.parse('{"path":"/guide/mysql/mysql45%E8%AE%B2/42-grant%E4%B9%8B%E5%90%8E%E8%A6%81flush.html","title":"42-grant之后要flush","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"全局权限","slug":"全局权限","link":"#全局权限","children":[]},{"level":2,"title":"db 权限","slug":"db-权限","link":"#db-权限","children":[]},{"level":2,"title":"表权限和列权限","slug":"表权限和列权限","link":"#表权限和列权限","children":[]},{"level":2,"title":"flush privileges 使用场景","slug":"flush-privileges-使用场景","link":"#flush-privileges-使用场景","children":[]}],"git":{"updatedTime":1746293673000,"contributors":[{"name":"alice","username":"alice","email":"921757697@qq.com","commits":1,"url":"https://github.com/alice"}],"changelog":[{"hash":"e5945ebdbc3e2b976f95add711e081bdd86f39b7","time":1746293673000,"email":"921757697@qq.com","author":"alice","message":"deploy mysql"}]},"filePathRelative":"guide/mysql/mysql45讲/42-grant之后要flush.md"}');export{c as comp,r as data};
