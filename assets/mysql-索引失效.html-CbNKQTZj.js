import{_ as n,c as a,e,o as l}from"./app-DlGl6QFf.js";const p={};function i(c,s){return l(),a("div",null,s[0]||(s[0]=[e(`<h1 id="mysql-索引失效" tabindex="-1"><a class="header-anchor" href="#mysql-索引失效"><span>MySQL 索引失效</span></a></h1><h2 id="索引失效的场景" tabindex="-1"><a class="header-anchor" href="#索引失效的场景"><span>索引失效的场景</span></a></h2><ul><li>使用函数或者表达式</li><li>存在隐式类型转换</li><li>组合索引未遵循最左匹配原则</li><li>like 查询使用左通配符</li><li>OR 条件中没有存在索引列</li><li>使用<code>!=</code>、<code>&lt;&gt;</code>、<code>NOT IN</code> 条件，无法使用索引</li><li>使用 <code>IS NULL</code> 或 <code>IS NOT NULL</code>, 无法使用索引</li><li>使用 <code>ORDER BY</code> 或 <code>GROUP BY</code> 中的列没有使用索引，无法使用索引</li><li>使用 <code>SELECT *</code> 返回的数据量过大，无法使用索引</li></ul><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code><span class="line"><span class="token comment">-- case1 使用函数或者表达式</span></span>
<span class="line"><span class="token keyword">SELECT</span> LENGTH<span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token keyword">as</span> length_name<span class="token punctuation">,</span> name <span class="token keyword">FROM</span> table_name <span class="token keyword">WHERE</span> LENGTH<span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">5</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- case2 存在隐式类型转换</span></span>
<span class="line"><span class="token keyword">SELECT</span> name <span class="token keyword">FROM</span> table_name <span class="token keyword">WHERE</span> age <span class="token operator">&gt;</span> <span class="token string">&#39;20&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- case3 组合索引未遵循最左匹配原则</span></span>
<span class="line"><span class="token keyword">SELECT</span> name<span class="token punctuation">,</span> age <span class="token keyword">FROM</span> table_name <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">&#39;Tom&#39;</span> <span class="token operator">AND</span> age <span class="token operator">&gt;</span> <span class="token number">20</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- case4 like 查询使用左通配符</span></span>
<span class="line"><span class="token keyword">SELECT</span> name <span class="token keyword">FROM</span> table_name <span class="token keyword">WHERE</span> name <span class="token operator">LIKE</span> <span class="token string">&#39;%Tom&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- case5 OR 条件中没有存在索引列</span></span>
<span class="line"><span class="token keyword">SELECT</span> name <span class="token keyword">FROM</span> table_name <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">&#39;Tom&#39;</span> <span class="token operator">OR</span> age <span class="token operator">&gt;</span> <span class="token number">20</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- case6 使用!=、&lt;&gt;、NOT IN 条件，无法使用索引</span></span>
<span class="line"><span class="token keyword">SELECT</span> name <span class="token keyword">FROM</span> table_name <span class="token keyword">WHERE</span> age <span class="token operator">NOT</span> <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- case7 使用 IS NULL 或 IS NOT NULL, 无法使用索引</span></span>
<span class="line"><span class="token keyword">SELECT</span> name <span class="token keyword">FROM</span> table_name <span class="token keyword">WHERE</span> age <span class="token operator">IS</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- case8 使用 ORDER BY 或 GROUP BY 中的列没有使用索引，无法使用索引</span></span>
<span class="line"><span class="token keyword">SELECT</span> age <span class="token keyword">FROM</span> table_name <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> name<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- case9 使用 SELECT * 返回的数据量过大，无法使用索引</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> table_name<span class="token punctuation">;</span> </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="索引失效的原因" tabindex="-1"><a class="header-anchor" href="#索引失效的原因"><span>索引失效的原因</span></a></h2><ul><li><p>索引列数据类型不匹配</p></li><li><p>索引列数据分布不均匀</p></li><li><p>索引列数据存在空值</p></li><li><p>索引列数据过大</p></li><li><p>索引列数据过多</p></li><li><p>索引列数据存在重复值</p></li><li><p>索引列数据存在外键关联</p></li><li><p>索引列数据存在函数计算</p></li><li><p>索引列数据存在表达式索引</p></li><li><p>索引列数据存在聚合函数</p></li><li><p>索引列数据存在排序</p></li><li><p>索引列数据存在分组</p></li><li><p>索引列数据存在子查询</p></li><li><p>索引列数据存在多表关联</p></li><li><p>索引列数据存在多列索引</p></li><li><p>索引列数据存在索引覆盖</p></li><li><p>索引列数据存在索引下推</p></li><li><p>索引不满足最左前缀匹配</p></li><li><p>索引字段隐式转换</p></li><li><p>字符串 like &#39;%xx&#39; 索引失效</p></li><li><p>字符串 like &#39;xx%&#39; 索引生效</p></li><li><p>MySQL 引擎优化不需要走索引</p></li></ul><h2 id="索引类型" tabindex="-1"><a class="header-anchor" href="#索引类型"><span>索引类型</span></a></h2><ul><li>联合索引, index(col1, col2)</li><li>最左匹配原则，先 col1, 后 col2</li><li>存在联合索引，查询条件不满足最左匹配原则，则索引失效 <ul><li>只存在col2,则失效</li><li>如果 col1 and col2都存在，则索引生效</li><li>如果col2 and col1， 索引生效</li></ul></li></ul>`,8)]))}const t=n(p,[["render",i]]),d=JSON.parse('{"path":"/guide/mysql/mysql-%E7%B4%A2%E5%BC%95%E5%A4%B1%E6%95%88.html","title":"MySQL 索引失效","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"索引失效的场景","slug":"索引失效的场景","link":"#索引失效的场景","children":[]},{"level":2,"title":"索引失效的原因","slug":"索引失效的原因","link":"#索引失效的原因","children":[]},{"level":2,"title":"索引类型","slug":"索引类型","link":"#索引类型","children":[]}],"git":{"updatedTime":1746957383000,"contributors":[{"name":"alice","username":"alice","email":"921757697@qq.com","commits":2,"url":"https://github.com/alice"}],"changelog":[{"hash":"1aa8f9ae6eff191a92c0a6ec3f2bbc615028e97c","time":1746957383000,"email":"921757697@qq.com","author":"alice","message":"deploy mysql 手绘图"},{"hash":"daf3790ef1795d02fbff734cf83b3c856cbb378c","time":1746034246000,"email":"921757697@qq.com","author":"alice","message":"deploy mysql"}]},"filePathRelative":"guide/mysql/mysql-索引失效.md"}');export{t as comp,d as data};
