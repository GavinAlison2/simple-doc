import{_ as i,c as l,e as o,o as a}from"./app-CNZ6fT6P.js";const s={};function r(t,e){return a(),l("div",null,e[0]||(e[0]=[o('<h1 id="promise" tabindex="-1"><a class="header-anchor" href="#promise"><span>Promise</span></a></h1><p>Promise 是异步编程的一种解决方案，它代表了一个异步操作的最终结果。Promise 提供统一的 API，使得异步操作可以像同步操作一样使用，避免了回调地狱。</p><p>Promise 是一个构造函数，用来生成 Promise 实例。Promise 实例有三种状态：</p><ul><li>Pending（等待）：初始状态，既没有被执行也没有被拒绝。</li><li>Fulfilled（已完成）：操作成功完成。</li><li>Rejected（已拒绝）：操作失败。</li></ul><p>Promise 实例具有以下方法：</p><ul><li><code>Promise.prototype.then()</code>：注册成功和失败的回调函数。</li><li><code>Promise.prototype.catch()</code>：注册失败的回调函数。</li><li><code>Promise.prototype.finally()</code>：注册最终的回调函数，无论 Promise 实例是fulfilled还是rejected。</li></ul><h2 id="练习" tabindex="-1"><a class="header-anchor" href="#练习"><span>练习</span></a></h2><ul><li><a href="./0001/js/promise-demo.js">promise-all.js</a></li></ul>',8)]))}const m=i(s,[["render",r]]),d=JSON.parse('{"path":"/guide/es6/promise.html","title":"Promise","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"练习","slug":"练习","link":"#练习","children":[]}],"git":{"updatedTime":1744907061000,"contributors":[{"name":"alice","username":"alice","email":"921757697@qq.com","commits":1,"url":"https://github.com/alice"}],"changelog":[{"hash":"6865a6735449381c1fba9a14aa9ad0c9bd2e80fc","time":1744907061000,"email":"921757697@qq.com","author":"alice","message":"deploy"}]},"filePathRelative":"guide/es6/promise.md"}');export{m as comp,d as data};
