import{_ as s}from"./20250419113150-DJ5Mf0GY.js";import{_ as a,c as p,e as t,o as e}from"./app-CNZ6fT6P.js";const l={};function c(o,n){return e(),p("div",null,n[0]||(n[0]=[t('<h1 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介"><span>1. 简介</span></a></h1><ul><li>SparkStreaming消费Kafka实现精确一次性消费. 保证消息不丢失、不重复消费.</li></ul><h2 id="_1-1-消息处理的语义" tabindex="-1"><a class="header-anchor" href="#_1-1-消息处理的语义"><span>1.1 消息处理的语义</span></a></h2><p><strong>At Least Once (至少处理一次)</strong></p><ul><li>消息至少被处理一次</li><li>可以保证 <strong>数据不丢失</strong>, 但有可能存在数据重复问题。</li></ul><p><strong>At Most Once (最多处理一次)</strong></p><ul><li>消息最多被处理一次</li><li>可以保证 <strong>数据不重复</strong>, 但有可能存在数据丢失问题.</li></ul><p><strong>Exactly Once (刚好处理一次)</strong></p><ul><li>消息刚好被处理一次</li><li>实际上并不是真的做到只对消息处理一次, 而是能够实现<code>消息的可靠性</code>和<code>消息的幂等性</code>, 即对于上下游系统来说不存在数据重复和数据丢失的问题</li><li>实际上是通过 <code>At Least Once</code> + <code>幂等性处理</code> 去实现<code>Exactly Once 语义</code></li></ul><h2 id="_1-2、消费数据的过程及存在的问题" tabindex="-1"><a class="header-anchor" href="#_1-2、消费数据的过程及存在的问题"><span>1.2、消费数据的过程及存在的问题</span></a></h2><p><img src="'+s+`" alt="1"></p><p>默认消费Kafka后是自动提交偏移量的(默认5秒自动提交一次), 那么就有可能有两种情况发生</p><ul><li><code>tip</code>: 偏移量就是记录每个消费者对每个分区(队列)消费到哪, 一般保存在 kafka 的consumer_offsets主题中</li></ul><h3 id="情况1、先提交了偏移量再处理消息" tabindex="-1"><a class="header-anchor" href="#情况1、先提交了偏移量再处理消息"><span>情况1、先提交了偏移量再处理消息</span></a></h3><ul><li>如果先提交了偏移量后, 处理数据后准备落盘的过程中进程挂了. 但是提交了偏移量, 那么下次会从最新的偏移量位置开始消费, 所以之前没有落盘的数据就丢失了.</li></ul><h3 id="情况2、处理消息后-再提交偏移量" tabindex="-1"><a class="header-anchor" href="#情况2、处理消息后-再提交偏移量"><span>情况2、处理消息后, 再提交偏移量</span></a></h3><ul><li>如果再处理完消息后, 进程挂了, 无法提交最新消费的偏移量, 那么下次还是会继续从旧的偏移量位置开始消费, 那么就有可能导致数据的重复消费</li></ul><p>可以发现消费一条消息有两个步骤<code>处理消息</code>和<code>提交偏移量</code>, 而我们又无法保证这两个步骤的<code>原子性</code>, 即<code>同时成功或者同时失败</code>那么就有可能导致<code>数据的丢失</code>或者<code>重复消费</code></p><h1 id="_2-实现exactly-once语义" tabindex="-1"><a class="header-anchor" href="#_2-实现exactly-once语义"><span>2. 实现Exactly Once语义</span></a></h1><h2 id="方法一-使用事务" tabindex="-1"><a class="header-anchor" href="#方法一-使用事务"><span>方法一: 使用事务</span></a></h2><p>实现Exactly Once语义的关键是保证<code>处理消息</code>和<code>提交偏移量</code>的原子性. 所以只要把这两个操作放到一个事务里, 不管是先处理消息和还是先提交偏移量都可以保证消息不丢失和不重复。</p><p><strong>实现思路</strong></p><ul><li>比如手动维护消费消息的偏移量, 并把偏移量放到MySQL中, 然后数据的落盘也放到MySQL中, 而MySQL是支持事务的, 那么我们就可以保证着两个操作的原子性了.</li></ul><p><strong>缺点</strong>:</p><ul><li>对存储层有依赖, 只能使用支持事务的存储层</li><li>事务性能不高</li><li>并且一个存储层容易存在单点故障压力过大, 如果做分布式又需要做分布式事务增加了复杂性</li></ul><h2 id="方法二-手动提交偏移量-幂等性" tabindex="-1"><a class="header-anchor" href="#方法二-手动提交偏移量-幂等性"><span>方法二: 手动提交偏移量 + 幂等性</span></a></h2><p>先确保真正处理完数据后再提交偏移量, 但是可能提交偏移量失败, 导致重复消费了, 这时就要做数据的幂等性保存了, 即数据无论被保存多少次效果都是一样的, 不会存在重复数据.</p><p><strong>幂等性保存实现</strong></p><ul><li>有些存储层本身支持幂等性操作的, 比如MySQL的主键和唯一索引, 相同id字段插入一次和插入一百次都是一样的(相同会插入失败). 还有Eleaticsearch的主键id也同样天然支持幂等操作(相同会覆盖). 还有Redis也是, 支持幂等操作的存储层远比支持事务的存储层多, 并且性能也比事务好</li><li>如果使用的存储层本身不支持幂等操作, 可能就需要自己手动实现保证幂等性了或者去重了.</li></ul><h3 id="核心伪代码实现" tabindex="-1"><a class="header-anchor" href="#核心伪代码实现"><span>核心伪代码实现</span></a></h3><div class="language-scala line-numbers-mode" data-highlighter="prismjs" data-ext="scala"><pre><code><span class="line"><span class="token keyword">object</span> Test <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">case</span> <span class="token keyword">class</span> UserLog<span class="token punctuation">(</span>id<span class="token operator">:</span><span class="token builtin">Int</span><span class="token punctuation">,</span> name<span class="token operator">:</span><span class="token builtin">String</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">   <span class="token comment">/**</span>
<span class="line">     *  1、初始化SparkStreaming、5秒采集一次数据</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token keyword">val</span> conf<span class="token operator">:</span> SparkConf <span class="token operator">=</span> <span class="token keyword">new</span> SparkConf<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>setAppName<span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>setMaster<span class="token punctuation">(</span><span class="token string">&quot;local[*]&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">val</span> ssc<span class="token operator">:</span> StreamingContext <span class="token operator">=</span> <span class="token keyword">new</span> StreamingContext<span class="token punctuation">(</span>conf<span class="token punctuation">,</span> Seconds<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>		</span>
<span class="line">	</span>
<span class="line">   <span class="token comment">/**</span>
<span class="line">	  2、从Redis中读取消费者组groupId消费主题topic的偏移量offset</span>
<span class="line">    */</span></span>
<span class="line">    <span class="token keyword">val</span> topic <span class="token operator">=</span> <span class="token string">&quot;topic-log&quot;</span></span>
<span class="line">    <span class="token keyword">val</span> groupId <span class="token operator">=</span> <span class="token string">&quot;consumer-007&quot;</span></span>
<span class="line"></span>
<span class="line">     <span class="token comment">/**</span>
<span class="line">	 3、   对businessProcessing业务处理使用精准一次消费</span>
<span class="line">     */</span></span>
<span class="line">      ExactOneUtil<span class="token punctuation">.</span>Builder<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>streamingContext<span class="token punctuation">(</span>ssc<span class="token punctuation">)</span><span class="token punctuation">.</span>topicGroup<span class="token punctuation">(</span>topic<span class="token punctuation">,</span> groupId<span class="token punctuation">)</span><span class="token punctuation">.</span>build<span class="token punctuation">(</span>businessProcessing<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    ssc<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    ssc<span class="token punctuation">.</span>awaitTermination<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">/** 业务处理  */</span></span>
<span class="line">  <span class="token keyword">def</span>  businessProcessing<span class="token punctuation">(</span>offsetDStream<span class="token operator">:</span> DStream<span class="token punctuation">[</span>ConsumerRecord<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> builder<span class="token operator">:</span> Builder<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// 拿到此次Dstream</span></span>
<span class="line">      <span class="token keyword">val</span> jsonObjectDStream<span class="token operator">:</span> DStream<span class="token punctuation">[</span>JSONObject<span class="token punctuation">]</span><span class="token operator">=</span> offsetDStream<span class="token punctuation">.</span>map<span class="token punctuation">(</span>msg <span class="token keyword">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">val</span> jsonObj<span class="token operator">:</span> JSONObject <span class="token operator">=</span> JSON<span class="token punctuation">.</span>parseObject<span class="token punctuation">(</span>msg<span class="token punctuation">.</span>value<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token comment">// .....</span></span>
<span class="line">        jsonObj</span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">  </span>
<span class="line">  </span>
<span class="line">      jsonObjectDStream<span class="token punctuation">.</span>foreachRDD<span class="token punctuation">(</span>rdd <span class="token keyword">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        rdd<span class="token punctuation">.</span>foreachPartition<span class="token punctuation">(</span>jsonObjList <span class="token keyword">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// 假设id是主键， 天然支持幂等， 无论保存多少次都是一样</span></span>
<span class="line">            <span class="token keyword">val</span> resultData<span class="token operator">:</span> Iterator<span class="token punctuation">[</span>UserLog<span class="token punctuation">]</span> <span class="token operator">=</span> jsonObjList<span class="token punctuation">.</span>map <span class="token punctuation">{</span> obj <span class="token keyword">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">              UserLog<span class="token punctuation">(</span>obj<span class="token punctuation">.</span>getIntValue<span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> obj<span class="token punctuation">.</span>getString<span class="token punctuation">(</span><span class="token string">&quot;nama&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">            <span class="token comment">// 对处理后的结果reasultDat进行落盘</span></span>
<span class="line">            resultData<span class="token punctuation">.</span>toList</span>
<span class="line">            <span class="token comment">// ..... save to MySQL or Es or Redis</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">  </span>
<span class="line">          <span class="token comment">// 处理完一批rdd数据并确保落盘后提交offset</span></span>
<span class="line">          builder<span class="token punctuation">.</span>saveOffsetrange<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="其他代码" tabindex="-1"><a class="header-anchor" href="#其他代码"><span>其他代码</span></a></h3><h4 id="exactoneutil" tabindex="-1"><a class="header-anchor" href="#exactoneutil"><span>ExactOneUtil</span></a></h4><div class="language-scala line-numbers-mode" data-highlighter="prismjs" data-ext="scala"><pre><code><span class="line"><span class="token keyword">object</span> ExactOneUtil <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">var</span> builder<span class="token operator">:</span> Builder <span class="token operator">=</span>_</span>
<span class="line"></span>
<span class="line">  <span class="token keyword">def</span> Builder<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Builder <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>builder <span class="token operator">=</span> <span class="token keyword">new</span> Builder<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>builder</span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">def</span> stop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>builder<span class="token punctuation">.</span>saveOffsetrange<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">class</span> Builder <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> topic<span class="token operator">:</span> <span class="token builtin">String</span> <span class="token operator">=</span>_</span>
<span class="line">    <span class="token keyword">var</span> groupId<span class="token operator">:</span> <span class="token builtin">String</span> <span class="token operator">=</span>_</span>
<span class="line">    <span class="token keyword">var</span> ssc<span class="token operator">:</span> StreamingContext <span class="token operator">=</span>_</span>
<span class="line">    <span class="token keyword">var</span> offsetRanges<span class="token operator">:</span> Array<span class="token punctuation">[</span>OffsetRange<span class="token punctuation">]</span> <span class="token operator">=</span> Array<span class="token punctuation">.</span>empty<span class="token punctuation">[</span>OffsetRange<span class="token punctuation">]</span> <span class="token comment">// key-分区id， value-偏移量</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">def</span> topicGroup<span class="token punctuation">(</span>topic<span class="token operator">:</span> <span class="token builtin">String</span><span class="token punctuation">,</span>groupId<span class="token operator">:</span> <span class="token builtin">String</span><span class="token punctuation">)</span><span class="token operator">:</span> Builder <span class="token operator">=</span><span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span>topic <span class="token operator">=</span> topic</span>
<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span>groupId <span class="token operator">=</span> groupId</span>
<span class="line">      <span class="token keyword">this</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">def</span> streamingContext<span class="token punctuation">(</span>ssc<span class="token operator">:</span> StreamingContext<span class="token punctuation">)</span><span class="token operator">:</span> Builder <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span>ssc <span class="token operator">=</span> ssc</span>
<span class="line">      <span class="token keyword">this</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">def</span> build<span class="token punctuation">(</span>fun<span class="token operator">:</span> <span class="token punctuation">(</span>DStream<span class="token punctuation">[</span>ConsumerRecord<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> Builder<span class="token punctuation">)</span> <span class="token keyword">=&gt;</span> <span class="token builtin">Unit</span> <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span><span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">var</span> baseInputDStream<span class="token operator">:</span> InputDStream<span class="token punctuation">[</span>ConsumerRecord<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span></span>
<span class="line">      <span class="token keyword">var</span> offsetMap<span class="token operator">:</span> Map<span class="token punctuation">[</span>TopicPartition<span class="token punctuation">,</span> <span class="token builtin">Long</span><span class="token punctuation">]</span> <span class="token operator">=</span> RedisOffsetUtil<span class="token punctuation">.</span>getOffset<span class="token punctuation">(</span>topic<span class="token punctuation">,</span> groupId<span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">if</span><span class="token punctuation">(</span>offsetMap <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> offsetMap<span class="token punctuation">.</span>nonEmpty<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">          baseInputDStream <span class="token operator">=</span> OffsetKafkaUtil<span class="token punctuation">.</span>getKafkaStream<span class="token punctuation">(</span>topic<span class="token punctuation">,</span> ssc<span class="token punctuation">,</span> offsetMap<span class="token punctuation">,</span> groupId<span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span></span>
<span class="line">          baseInputDStream <span class="token operator">=</span> OffsetKafkaUtil<span class="token punctuation">.</span>getKafkaStream<span class="token punctuation">(</span>topic<span class="token punctuation">,</span> ssc<span class="token punctuation">,</span> groupId<span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token keyword">val</span> offsetDStream <span class="token operator">=</span> filterOffsetRange<span class="token punctuation">(</span>baseInputDStream<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">      <span class="token comment">// 业务处理</span></span>
<span class="line">      fun<span class="token punctuation">(</span>offsetDStream<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">def</span> filterOffsetRange<span class="token punctuation">(</span>dStream<span class="token operator">:</span> InputDStream<span class="token punctuation">[</span>ConsumerRecord<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span>  DStream<span class="token punctuation">[</span>ConsumerRecord<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">val</span> offsetDStream<span class="token operator">:</span> DStream<span class="token punctuation">[</span>ConsumerRecord<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> dStream<span class="token punctuation">.</span>transform<span class="token punctuation">(</span>rdd <span class="token keyword">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// KafkaRDD</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>offsetRanges <span class="token operator">=</span> rdd<span class="token punctuation">.</span>asInstanceOf<span class="token punctuation">[</span>HasOffsetRanges<span class="token punctuation">]</span><span class="token punctuation">.</span>offsetRanges</span>
<span class="line">        rdd</span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">      offsetDStream</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">def</span> saveOffsetrange<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span><span class="token punctuation">{</span></span>
<span class="line">      RedisOffsetUtil<span class="token punctuation">.</span>saveOffset<span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>topic<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>groupId<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>offsetRanges<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="offsetutil" tabindex="-1"><a class="header-anchor" href="#offsetutil"><span>OffsetUtil</span></a></h4><div class="language-scala line-numbers-mode" data-highlighter="prismjs" data-ext="scala"><pre><code><span class="line"><span class="token keyword">trait</span>  OffsetUtil <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 获取偏移量</span></span>
<span class="line">  <span class="token keyword">def</span> getOffset<span class="token punctuation">(</span>topicName<span class="token operator">:</span> <span class="token builtin">String</span><span class="token punctuation">,</span> groupId<span class="token operator">:</span> <span class="token builtin">String</span><span class="token punctuation">)</span><span class="token operator">:</span> Map<span class="token punctuation">[</span>TopicPartition<span class="token punctuation">,</span> <span class="token builtin">Long</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 保存偏移量</span></span>
<span class="line">  <span class="token keyword">def</span> saveOffset<span class="token punctuation">(</span>topicName<span class="token operator">:</span> <span class="token builtin">String</span><span class="token punctuation">,</span> groupId<span class="token operator">:</span> <span class="token builtin">String</span><span class="token punctuation">,</span> offsetArray<span class="token operator">:</span> Array<span class="token punctuation">[</span>OffsetRange<span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">object</span> OffsetRedisUtil <span class="token punctuation">{</span></span>
<span class="line">	 <span class="token comment">/** 1-在Redis 存储消费者组对某个主题消费的偏移量</span>
<span class="line">   *</span>
<span class="line">   * Reids 存储格式设计</span>
<span class="line">   *    key:  关键字 + 主题 + 消费者组</span>
<span class="line">   *    value： 用Hash存储</span>
<span class="line">   *              hash key：   分区</span>
<span class="line">   *              hash value： 偏移量</span>
<span class="line">   *    Key                                  Hash Value</span>
<span class="line">   *  offset:xx_topic:xx_groupId          分区id_01 偏移量值</span>
<span class="line">   *  offset:xx_topic:xx_groupId          分区id_02 偏移量值</span>
<span class="line">   *  offset:xx_topic:xx_groupId          分区id_03 偏移量值</span>
<span class="line">   *</span>
<span class="line">   * @param topicName   主题名称</span>
<span class="line">   * @param groupId     消费者组</span>
<span class="line">   */</span></span>
<span class="line">  <span class="token keyword">override</span> <span class="token keyword">def</span> saveOffset<span class="token punctuation">(</span>topicName<span class="token operator">:</span> <span class="token builtin">String</span><span class="token punctuation">,</span> groupId<span class="token operator">:</span> <span class="token builtin">String</span><span class="token punctuation">,</span> offsetArray<span class="token operator">:</span> Array<span class="token punctuation">[</span>OffsetRange<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">val</span> keyName<span class="token operator">:</span> <span class="token builtin">String</span> <span class="token operator">=</span> createKeyName<span class="token punctuation">(</span>topicName<span class="token punctuation">,</span> groupId<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">      <span class="token comment">// 1-取出每个分区的最新偏移量到map</span></span>
<span class="line">      <span class="token keyword">val</span> map <span class="token operator">=</span> <span class="token keyword">new</span> util<span class="token punctuation">.</span>HashMap<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">for</span> <span class="token punctuation">(</span>elem <span class="token keyword">&lt;-</span> offsetArray<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        map<span class="token punctuation">.</span>put<span class="token punctuation">(</span>elem<span class="token punctuation">.</span>partition<span class="token punctuation">.</span>toString<span class="token punctuation">,</span> elem<span class="token punctuation">.</span>untilOffset<span class="token punctuation">.</span>toString<span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        JedisUtil<span class="token punctuation">.</span>hmset<span class="token punctuation">(</span>keyName<span class="token punctuation">,</span> map<span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  </span>
<span class="line">  </span>
<span class="line">  <span class="token comment">/**</span>
<span class="line">   *    2- 从Redis 获取某个主题的某个消费者组消费的偏移量</span>
<span class="line">   */</span></span>
<span class="line">  <span class="token keyword">override</span> <span class="token keyword">def</span> getOffset<span class="token punctuation">(</span>topicName<span class="token operator">:</span> <span class="token builtin">String</span><span class="token punctuation">,</span> groupId<span class="token operator">:</span> <span class="token builtin">String</span><span class="token punctuation">)</span><span class="token operator">:</span> Map<span class="token punctuation">[</span>TopicPartition<span class="token punctuation">,</span> <span class="token builtin">Long</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">val</span> keyName<span class="token operator">:</span> <span class="token builtin">String</span> <span class="token operator">=</span> createKeyName<span class="token punctuation">(</span>topicName<span class="token punctuation">,</span> groupId<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">val</span> map<span class="token operator">:</span>  util<span class="token punctuation">.</span>HashMap<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">,</span> <span class="token builtin">String</span><span class="token punctuation">]</span> <span class="token operator">=</span> JedisUtil<span class="token punctuation">.</span>hgetAll<span class="token punctuation">(</span>keyName<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">//将HashMap[String, String]转换成Map[TopicPartition, Long] 返回</span></span>
<span class="line">    <span class="token keyword">import</span> <span class="token namespace">scala<span class="token punctuation">.</span>collection<span class="token punctuation">.</span></span>JavaConverters<span class="token punctuation">.</span>_</span>
<span class="line">    map<span class="token punctuation">.</span>asScala<span class="token punctuation">.</span>map<span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token punctuation">(</span>partitionId<span class="token punctuation">,</span> offset<span class="token punctuation">)</span> <span class="token keyword">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">val</span> partition <span class="token operator">=</span> <span class="token keyword">new</span> TopicPartition<span class="token punctuation">(</span>topicName<span class="token punctuation">,</span> partitionId<span class="token punctuation">.</span>toInt<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">(</span>partition<span class="token punctuation">,</span> offset<span class="token punctuation">.</span>toLong<span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">.</span>toMap</span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">def</span>  createKeyName<span class="token punctuation">(</span>topicName<span class="token operator">:</span> <span class="token builtin">String</span><span class="token punctuation">,</span> groupId<span class="token operator">:</span> <span class="token builtin">String</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">String</span> <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">     <span class="token string">&quot;offset&quot;</span> <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span> <span class="token operator">+</span> topicName <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span>  <span class="token operator">+</span> groupId</span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="offsetkafkautil" tabindex="-1"><a class="header-anchor" href="#offsetkafkautil"><span>OffsetKafkaUtil</span></a></h4><div class="language-scala line-numbers-mode" data-highlighter="prismjs" data-ext="scala"><pre><code><span class="line"><span class="token keyword">object</span> OffsetKafkaUtil <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">var</span> param <span class="token operator">=</span> collection<span class="token punctuation">.</span>mutable<span class="token punctuation">.</span>Map<span class="token punctuation">(</span></span>
<span class="line">    <span class="token string">&quot;bootstrap.servers&quot;</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;192.168.2.102:9092&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;key.deserializer&quot;</span> <span class="token operator">-&gt;</span> classOf<span class="token punctuation">[</span>StringDeserializer<span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;value.deserializer&quot;</span> <span class="token operator">-&gt;</span> classOf<span class="token punctuation">[</span>StringDeserializer<span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;auto.offset.reset&quot;</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;latest&quot;</span><span class="token punctuation">,</span>  <span class="token comment">//latest： 表示自动重置偏移量为最新的偏移量</span></span>
<span class="line">    <span class="token string">&quot;enable.auto.commit&quot;</span> <span class="token operator">-&gt;</span> <span class="token punctuation">(</span><span class="token boolean">false</span><span class="token operator">:</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span><span class="token builtin">Boolean</span><span class="token punctuation">)</span> <span class="token comment">// 是否自动提交偏移量</span></span>
<span class="line">  <span class="token punctuation">)</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">//从最新的偏移量位置读取数据</span></span>
<span class="line">  <span class="token keyword">def</span> getKafkaStream<span class="token punctuation">(</span>topic<span class="token operator">:</span> <span class="token builtin">String</span><span class="token punctuation">,</span>ssc<span class="token operator">:</span>StreamingContext<span class="token punctuation">,</span>groupId<span class="token operator">:</span><span class="token builtin">String</span><span class="token punctuation">)</span><span class="token operator">:</span> InputDStream<span class="token punctuation">[</span>ConsumerRecord<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">,</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">{</span></span>
<span class="line">    param<span class="token punctuation">(</span><span class="token string">&quot;group.id&quot;</span><span class="token punctuation">)</span><span class="token operator">=</span>groupId</span>
<span class="line">     KafkaUtils<span class="token punctuation">.</span>createDirectStream<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">,</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">(</span></span>
<span class="line">        ssc<span class="token punctuation">,</span></span>
<span class="line">        LocationStrategies<span class="token punctuation">.</span>PreferConsistent<span class="token punctuation">,</span></span>
<span class="line">        ConsumerStrategies<span class="token punctuation">.</span>Subscribe<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">,</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">(</span>Array<span class="token punctuation">(</span>topic<span class="token punctuation">)</span><span class="token punctuation">,</span>param<span class="token punctuation">)</span></span>
<span class="line">     <span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">//从指定的偏移量位置读取数据</span></span>
<span class="line">  <span class="token keyword">def</span> getKafkaStream<span class="token punctuation">(</span>topic<span class="token operator">:</span> <span class="token builtin">String</span><span class="token punctuation">,</span>ssc<span class="token operator">:</span>StreamingContext<span class="token punctuation">,</span>offsetMap<span class="token punctuation">[</span>TopicPartition<span class="token punctuation">,</span><span class="token builtin">Long</span><span class="token punctuation">]</span><span class="token punctuation">,</span>groupId<span class="token operator">:</span><span class="token builtin">String</span><span class="token punctuation">)</span><span class="token operator">:</span> InputDStream<span class="token punctuation">[</span>ConsumerRecord<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">,</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">{</span></span>
<span class="line">    param<span class="token punctuation">(</span><span class="token string">&quot;group.id&quot;</span><span class="token punctuation">)</span><span class="token operator">=</span>groupId</span>
<span class="line">    KafkaUtils<span class="token punctuation">.</span>createDirectStream<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">,</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">(</span></span>
<span class="line">        ssc<span class="token punctuation">,</span></span>
<span class="line">        LocationStrategies<span class="token punctuation">.</span>PreferConsistent<span class="token punctuation">,</span></span>
<span class="line">        ConsumerStrategies<span class="token punctuation">.</span>Subscribe<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">,</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">(</span>Array<span class="token punctuation">(</span>topic<span class="token punctuation">)</span><span class="token punctuation">,</span>param<span class="token punctuation">,</span>offsetMap<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="maven依赖" tabindex="-1"><a class="header-anchor" href="#maven依赖"><span>maven依赖</span></a></h4><p>pom.xml</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml"><pre><code><span class="line"> 	   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>fastjson<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.2.62<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.spark<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spark-core_2.11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\${spark.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.spark<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spark-streaming_2.11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.4.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.spark<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spark-streaming-kafka-0-10_2.11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.4.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>redis.clients<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>jedis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.9.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>转载： https://juejin.cn/post/6955132660704346142#heading-0</p>`,42)]))}const r=a(l,[["render",c]]),k=JSON.parse('{"path":"/guide/etl/spark/spark-kafka.html","title":"1. 简介","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"1.1 消息处理的语义","slug":"_1-1-消息处理的语义","link":"#_1-1-消息处理的语义","children":[]},{"level":2,"title":"1.2、消费数据的过程及存在的问题","slug":"_1-2、消费数据的过程及存在的问题","link":"#_1-2、消费数据的过程及存在的问题","children":[{"level":3,"title":"情况1、先提交了偏移量再处理消息","slug":"情况1、先提交了偏移量再处理消息","link":"#情况1、先提交了偏移量再处理消息","children":[]},{"level":3,"title":"情况2、处理消息后, 再提交偏移量","slug":"情况2、处理消息后-再提交偏移量","link":"#情况2、处理消息后-再提交偏移量","children":[]}]},{"level":2,"title":"方法一: 使用事务","slug":"方法一-使用事务","link":"#方法一-使用事务","children":[]},{"level":2,"title":"方法二:  手动提交偏移量 + 幂等性","slug":"方法二-手动提交偏移量-幂等性","link":"#方法二-手动提交偏移量-幂等性","children":[{"level":3,"title":"核心伪代码实现","slug":"核心伪代码实现","link":"#核心伪代码实现","children":[]},{"level":3,"title":"其他代码","slug":"其他代码","link":"#其他代码","children":[]}]}],"git":{"updatedTime":1745085297000,"contributors":[{"name":"alice","username":"alice","email":"921757697@qq.com","commits":1,"url":"https://github.com/alice"}],"changelog":[{"hash":"789ae6490502e8f6913ebd4aac1832826f8d1920","time":1745085297000,"email":"921757697@qq.com","author":"alice","message":"doc 整理"}]},"filePathRelative":"guide/etl/spark/spark-kafka.md"}');export{r as comp,k as data};
