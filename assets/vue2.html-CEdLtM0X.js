import{_ as u,c,a as s,e as i,b as l,w as e,t as o,d as a,r,o as d}from"./app-CdVidjIO.js";const v={};function m(p,n){const t=r("RouteLink");return d(),c("div",null,[n[31]||(n[31]=s("h1",{id:"vue2",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#vue2"},[s("span",null,"vue2")])],-1)),s("ul",null,[s("li",null,[l(t,{to:"/guide/vue/vue2-base-grammar.html"},{default:e(()=>n[0]||(n[0]=[a("vue2 基础语法")])),_:1}),s("ul",null,[s("li",null,[l(t,{to:"/guide/vue/vue2-instance.html"},{default:e(()=>n[1]||(n[1]=[a("vue2 实例")])),_:1})]),s("li",null,[l(t,{to:"/guide/vue/vue2-data-binding.html"},{default:e(()=>n[2]||(n[2]=[a("vue2 数据绑定")])),_:1})]),s("li",null,[l(t,{to:"/guide/vue/vue2-computed-and-watchers.html"},{default:e(()=>n[3]||(n[3]=[a("vue2 计算属性和侦听器")])),_:1})]),s("li",null,[l(t,{to:"/guide/vue/vue2-event-handling.html"},{default:e(()=>n[4]||(n[4]=[a("vue2 事件处理")])),_:1})]),s("li",null,[l(t,{to:"/guide/vue/vue2-conditional-rendering.html"},{default:e(()=>n[5]||(n[5]=[a("vue2 条件渲染")])),_:1})]),s("li",null,[l(t,{to:"/guide/vue/vue2-list-rendering.html"},{default:e(()=>n[6]||(n[6]=[a("vue2 列表渲染")])),_:1})]),s("li",null,[l(t,{to:"/guide/vue/vue2-form-input-binding.html"},{default:e(()=>n[7]||(n[7]=[a("vue2 表单输入绑定")])),_:1})]),s("li",null,[l(t,{to:"/guide/vue/vue2-component-basics.html"},{default:e(()=>n[8]||(n[8]=[a("vue2 组件基础")])),_:1})]),s("li",null,[l(t,{to:"/guide/vue/vue2-component-communication.html"},{default:e(()=>n[9]||(n[9]=[a("vue2 组件通信")])),_:1})]),s("li",null,[l(t,{to:"/guide/vue/vue2-custom-directives.html"},{default:e(()=>n[10]||(n[10]=[a("vue2 自定义指令")])),_:1})])])]),s("li",null,[l(t,{to:"/guide/vue/vue2-components.html"},{default:e(()=>n[11]||(n[11]=[a("vue2 组件")])),_:1})]),s("li",null,[l(t,{to:"/guide/vue/vue2-router.html"},{default:e(()=>n[12]||(n[12]=[a("vue2 路由")])),_:1})]),s("li",null,[l(t,{to:"/guide/vue/vue2-state-management.html"},{default:e(()=>n[13]||(n[13]=[a("vue2 状态管理")])),_:1})]),s("li",null,[l(t,{to:"/guide/vue/vue2-forms.html"},{default:e(()=>n[14]||(n[14]=[a("vue2 表单")])),_:1})]),s("li",null,[l(t,{to:"/guide/vue/vue2-plugins.html"},{default:e(()=>n[15]||(n[15]=[a("vue2 插件")])),_:1})]),s("li",null,[l(t,{to:"/guide/vue/vue2-unit-testing.html"},{default:e(()=>n[16]||(n[16]=[a("vue2 单元测试")])),_:1})]),s("li",null,[l(t,{to:"/guide/vue/vue2-performance-optimization.html"},{default:e(()=>n[17]||(n[17]=[a("vue2 性能优化")])),_:1})]),s("li",null,[l(t,{to:"/guide/vue/vue2-server-side-rendering.html"},{default:e(()=>n[18]||(n[18]=[a("vue2 服务器端渲染")])),_:1})])]),n[32]||(n[32]=s("h2",{id:"table-of-contents",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#table-of-contents"},[s("span",null,"table of contents")])],-1)),n[33]||(n[33]=s("h3",{id:"基础",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#基础"},[s("span",null,"基础")])],-1)),s("ul",null,[s("li",null,[n[22]||(n[22]=s("p",null,"声明式渲染",-1)),s("ul",null,[s("li",null,"divInnerText "+o(p.message),1),n[19]||(n[19]=s("li",null,'v-bind:title="message"',-1)),n[20]||(n[20]=s("li",null,'v-html="htmlContent"',-1)),n[21]||(n[21]=s("li",null,'v-model="message" 双向绑定',-1))])]),n[30]||(n[30]=i("<li><p>条件与循环</p><ul><li>v-if=&quot;hidden&quot;</li><li>v-else</li><li>v-else-if</li><li>v-for=&quot;(item, index) in items&quot;</li></ul></li><li><p>处理用户输入 事件监听</p><ul><li>v-on:click=&quot;handleClick&quot;</li><li>v-on:keyup.enter=&quot;handleEnter&quot;</li><li>@click=&quot;handleClick&quot;</li><li>@keyup.enter=&quot;handleEnter&quot;</li></ul></li><li><p>vue 实例</p><ul><li>vue.$data === data</li><li>vue.$el === el / document.getElementById(&quot;app&quot;)</li><li>vue.$refs === ref</li><li>vue.$options === options</li><li>vue.$parent === parent</li><li>vue.$root === root</li><li>vue.$children === children</li><li>vue.$emit === emit</li><li>vue.$mount === mount</li><li>vue.$forceUpdate === forceUpdate</li><li>vue.$watch(&#39;data&#39;, function(newVal, oldVal) {...})</li></ul></li><li><p>生命周期</p><ul><li>beforeCreate</li><li>created</li><li>beforeMount</li><li>mounted</li><li>beforeUpdate</li><li>updated</li><li>beforeDestroy</li><li>destroyed</li></ul></li>",4)),s("li",null,[n[29]||(n[29]=s("p",null,"模板语法",-1)),s("ul",null,[s("li",null,[n[27]||(n[27]=s("p",null,"插值",-1)),s("ul",null,[s("li",null,[a("文本 , "+o(p.message)+", ",1),n[23]||(n[23]=s("code",null,"<span>Message: {{ msg }}</span>",-1))]),n[25]||(n[25]=s("li",null,[a('原始 html ,v-html="htmlContent" v-text="textContent" '),s("code",null,'<p>Using mustaches: {{ rawHtml }}</p> <p>Using v-html directive: <span v-html="rawHtml"></span></p>')],-1)),n[26]||(n[26]=s("li",null,[a('html 的属性 attribute, v-bind:href="url" '),s("code",null,'<a :href="url">Link</a>')],-1)),s("li",null,[a("JavaScript 表达式 , "+o(p.number+1)+" ",1),n[24]||(n[24]=s("code",null,"<span>1 + 1 = {{ 1 + 1 }}</span>, {{ message.split('').reverse().join('') }}",-1))])])]),n[28]||(n[28]=i("<li><p>指令</p><ul><li>v-if=&quot;condition&quot; <code>&lt;p v-if=&quot;seen&quot;&gt;现在你看到我了&lt;/p&gt;</code></li><li>v-else-if=&quot;condition&quot;</li><li>v-else</li><li>v-show=&quot;condition&quot;</li><li>v-for=&quot;(item, index) in items&quot;</li><li>v-on:click=&quot;handleClick&quot;</li><li>v-bind:title=&quot;message&quot;</li><li>v-model=&quot;message&quot;</li><li>v-pre</li><li>v-once</li><li>v-cloak</li><li>v-text=&quot;textContent&quot;</li><li>v-html=&quot;htmlContent&quot;</li><li>动态参数</li><li>修饰符 .prevent, .stop, .capture, .self, .once</li></ul></li><li><p>缩写</p></li>",2))])])]),n[34]||(n[34]=i(`<div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code><span class="line">v-bind:xx</span>
<span class="line"><span class="token comment">&lt;!-- 完整语法 --&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>url<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token comment">&lt;!-- 缩写 --&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">:href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>url<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token comment">&lt;!-- 动态参数的缩写 (2.6.0+) --&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">:[key]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>url<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> ... <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">v-on:xx</span>
<span class="line"><span class="token comment">&lt;!-- 完整语法 --&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>doSomething<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token comment">&lt;!-- 缩写 --&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>doSomething<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token comment">&lt;!-- 动态参数的缩写 (2.6.0+) --&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">@[event]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>doSomething<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> ... <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>计算属性和侦听器</p><ul><li>computed</li><li>watch</li></ul></li><li><p>Class 和 Style 绑定</p><ul><li>v-bind:class=&quot;{ active: isActive, &#39;text-danger&#39;: hasError }&quot; # 增强对象 class, 只处理 isActive 和 hasError 变量</li><li>v-bind:style=&quot;{ fontSize: &#39;14px&#39;, color: activeColor }&quot; # 增强对象 style, 只处理 fontSize 和 activeColor 变量</li><li>绑定 HTML class 和 style 特性 <code>&lt;div v-bind:class=&quot;classObject&quot; v-bind:style=&quot;styleObject&quot;&gt;...&lt;/div&gt;</code></li><li>对象语法 <code>&lt;div v-bind:class=&quot;{ active: isActive }&quot;&gt;&lt;/div&gt;</code></li><li>数组语法 <code>&lt;div v-bind:class=&quot;[activeClass, errorClass]&quot;&gt;&lt;/div&gt;</code></li><li>组件绑定 class 和 style <code>&lt;my-component class=&quot;baz boo&quot;&gt;&lt;/my-component&gt;</code></li><li>内联样式 <code>&lt;div v-bind:style=&quot;styleObject&quot;&gt;...&lt;/div&gt;</code></li></ul></li><li><p>条件渲染</p><ul><li>v-if</li><li>v-else-if</li><li>v-else</li><li>v-show</li><li>v-for</li></ul></li><li><p>列表渲染</p><ul><li>v-for 遍历数组</li><li>v-for 遍历对象</li><li>v-for 遍历数字</li><li>v-for 遍历字符串</li><li>v-for 遍历 Map 和 Set</li><li>v-for 遍历自定义对象</li><li>v-for 遍历异步数据</li><li>v-for 遍历组件</li><li>显示过滤后的列表 <code>&lt;li v-for=&quot;(item, index) in items | filterBy searchQuery&quot;&gt;{{ index }} - {{ item }}&lt;/li&gt;</code></li><li>显示索引 <code>&lt;li v-for=&quot;(item, index) in items&quot;&gt;{{ index }} - {{ item }}&lt;/li&gt;</code></li><li>显示当前项 <code>&lt;li v-for=&quot;(item, index) in items&quot; :key=&quot;item&quot;&gt;{{ index }} - {{ item }}&lt;/li&gt;</code></li><li>显示当前项的属性 <code>&lt;li v-for=&quot;(item, index) in items&quot; :key=&quot;item.id&quot;&gt;{{ index }} - {{ item.text }}&lt;/li&gt;</code></li></ul></li><li><p>事件处理</p><ul><li>v-on:click</li><li>v-on:click=&quot;handleClick(&#39;xx&#39;, event)&quot;</li><li>事件修饰符 .stop, .prevent, .capture, .self, .once .passive</li><li>按键修饰符 v-on:keyup.enter .exact .tab .esc .ctrl .alt .shift</li><li>@click</li></ul></li><li><p>表单输入绑定</p><ul><li>v-model <ul><li>text 和 textarea 元素使用 value property 和 input 事件；</li><li>checkbox 和 radio 元素使用 checked property 和 change 事件；</li><li>select 元素使用 value property 和 change 事件。</li><li>input 元素使用 value property 和 input 事件，除非使用了 v-model 修饰符。</li></ul></li><li>修饰符 .lazy, .number, .trim</li><li>v-model 修饰符 .lazy, .number, .trim</li></ul></li><li><p>组件基础</p><ul><li>vue.component(&#39;name&#39;, { template: <code>&lt;div&gt;A custom component!&lt;/div&gt;</code>, props: [&#39;propData&#39;], })</li><li>props</li><li>data 函数</li><li>组件 <code>&lt;my-component v-bind:propData=&quot;data&quot; @click=&quot;handleClick&quot; v-bind:propObj=&quot;obj&quot;&gt;&lt;/my-component&gt;</code></li><li>子组件触发事件 <code>template: &#39;&lt;button v-on:click=&quot;$emit(\\&#39;my-event\\&#39;, $event)&quot;&gt;Click me!&lt;/button&gt;&#39;</code></li><li>父组件 v-model 双向绑定 <code>&lt;custom-input v-model=&quot;searchText&quot;&gt;&lt;/custom-input&gt;</code>, 子组件 <code>template: &#39;&lt;input :value=&quot;value&quot; @input=&quot;$emit(\\&#39;input\\&#39;, $event.target.value)&quot;&gt;&#39;</code></li><li>插槽 <code>&lt;slot&gt;&lt;/slot&gt;</code> <code>&lt;my-component&gt;&lt;span slot=&quot;header&quot;&gt;This is a slot&lt;/span&gt;&lt;/my-component&gt;</code></li><li>动态组件 <code>&lt;component :is=&quot;currentView&quot;&gt;&lt;/component&gt;</code> <code>&lt;component :is=&quot;getComponentName(view)&quot;&gt;&lt;/component&gt;</code></li><li>异步组件 <code>&lt;router-view&gt;&lt;/router-view&gt;</code> <code>&lt;router-view :component=&quot;getComponent(view)&quot;&gt;&lt;/router-view&gt;</code></li></ul></li></ul><h3 id="深入了解组件" tabindex="-1"><a class="header-anchor" href="#深入了解组件"><span>深入了解组件</span></a></h3><ul><li><p>组件注册 <code>Vue.component(&#39;my-component&#39;, { template: &#39;&lt;div&gt;A custom component!&lt;/div&gt;&#39; })</code> <code>&lt;my-component&gt;&lt;/my-component&gt;</code> <code>&lt;div is=&quot;my-component&quot;&gt;&lt;/div&gt;</code></p><ul><li>全局注册 <code>Vue.component(&#39;my-component&#39;, { template: &#39;&lt;div&gt;A custom component!&lt;/div&gt;&#39; })</code></li><li>局部注册 <code>components: { &#39;my-component&#39;: { template: &#39;&lt;div&gt;A custom component!&lt;/div&gt;&#39; } }</code> <code>&lt;my-component&gt;&lt;/my-component&gt;</code></li></ul></li><li><p>props 传递数据 父组件中 <code>&lt;my-component :propData=&quot;data&quot;&gt;&lt;/my-component&gt;</code> 子组件中 <code>props: [&#39;propData&#39;]</code></p></li><li><p>自定义事件 父组件中 <code>&lt;my-component @my-event=&quot;handleEvent&quot;&gt;&lt;/my-component&gt;</code> 子组件中 <code>$emit(&#39;my-event&#39;, data)</code> v-model</p></li><li><p>插槽</p></li><li><p>动态组件 和 异步组件</p></li><li><p>处理边界</p></li></ul><h3 id="过渡和动画" tabindex="-1"><a class="header-anchor" href="#过渡和动画"><span>过渡和动画</span></a></h3><ul><li>进入/离开/列表过渡</li><li>状态过渡</li></ul><h3 id="组合" tabindex="-1"><a class="header-anchor" href="#组合"><span>组合</span></a></h3><ul><li>混入</li><li>自定义指令</li><li>渲染函数与 JSX</li><li>插件</li><li>过滤器</li></ul><h3 id="工具" tabindex="-1"><a class="header-anchor" href="#工具"><span>工具</span></a></h3><ul><li><p>单文件组件</p></li><li><p>测试</p></li><li><p>TypeScript</p></li><li><p>生产环境构建</p></li><li><p>路由</p></li><li><p>状态管理</p></li><li><p>表单</p></li><li><p>服务器端渲染</p></li><li><p>性能优化</p><p>------------------done ------------------todo</p></li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&quot;#app&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&quot;Hello Vue!&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">hidden</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">items</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;apple&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;banana&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;orange&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">handleClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">handleEnter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">fullName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>firstName <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lastName<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">watch</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">fullName</span><span class="token punctuation">(</span><span class="token parameter">newVal<span class="token punctuation">,</span> oldVal</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">filters</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">capitalize</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">directives</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token function">beforeCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&quot;my-component&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div&gt;A custom component! {{ propData }}-{{ message }}-{{msg}}-{{propObj.name}}&lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;propData&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;propObj&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 接收父组件传递的数据</span></span>
<span class="line">  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 组件的局部状态, 属于实例的,每个实例自己的</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&quot;Hello from my-component!&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 组件全局的,属于组件的,所有实例共用的</span></span>
<span class="line">    <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&quot;Hello from my-component!&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12))])}const g=u(v,[["render",m]]),q=JSON.parse('{"path":"/guide/vue/vue2.html","title":"vue2","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"table of contents","slug":"table-of-contents","link":"#table-of-contents","children":[{"level":3,"title":"基础","slug":"基础","link":"#基础","children":[]},{"level":3,"title":"深入了解组件","slug":"深入了解组件","link":"#深入了解组件","children":[]},{"level":3,"title":"过渡和动画","slug":"过渡和动画","link":"#过渡和动画","children":[]},{"level":3,"title":"组合","slug":"组合","link":"#组合","children":[]},{"level":3,"title":"工具","slug":"工具","link":"#工具","children":[]}]}],"git":{"updatedTime":1744908373000,"contributors":[{"name":"alice","username":"alice","email":"921757697@qq.com","commits":1,"url":"https://github.com/alice"}],"changelog":[{"hash":"b76da10ee718506b403f597aa5e358ba4a946939","time":1744908373000,"email":"921757697@qq.com","author":"alice","message":"vue"}]},"filePathRelative":"guide/vue/vue2.md"}');export{g as comp,q as data};
