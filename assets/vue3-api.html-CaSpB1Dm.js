import{_ as l,c as e,e as t,o as r}from"./app-DlGl6QFf.js";const a={};function o(n,i){return r(),e("div",null,i[0]||(i[0]=[t('<h1 id="vue3-api" tabindex="-1"><a class="header-anchor" href="#vue3-api"><span>Vue3 API</span></a></h1><ul><li>config API <ul><li>Vue.createApp({}).config = {...}</li><li>errorHandler</li><li>warnHandler</li><li>globalProperties</li><li>isCustomElement</li><li>optionMergeStrategies</li><li>performance</li></ul></li><li>createApp API <ul><li>component</li><li>config</li><li>directive</li><li>mixin</li><li>provide</li><li>use</li></ul></li><li>global API <ul><li>createApp</li><li>h , VNode</li><li>defineComponent</li><li>defineAsyncComponent</li><li>resolveComponent</li><li>resolveDynamicComponent</li><li>resolveDirective</li><li>withDirectives</li><li>createRenderer</li><li>nextTick, 将回调推迟到下一个 DOM 更新周期之后执行</li></ul></li><li>Data API <ul><li>data, 返回组件实例的 data 对象的函数</li><li>props, props 可以是数组或对象，用于接收来自父组件的数据</li><li>computed, 计算属性将被混入到组件实例中。所有 getter 和 setter 的 this 上下文自动地绑定为组件实例</li><li>methods, 组件实例的方法,可以直接通过 VM 实例访问这些方法，或者在指令表达式中使用。方法中的 this 自动绑定为组件实例</li><li>watch, 观察属性的变化,一个对象，键是需要观察的表达式，值是对应回调函数。值也可以是方法名，或者包含选项的对象</li><li>emits, 声明发射的事件,emits 可以是数组或对象，从组件触发自定义事件，emits 可以是简单的数组，或者对象作为替代，允许配置和事件验证</li></ul></li><li>DOM API <ul><li>template, 组件的 HTML 模板</li><li>render, 组件的渲染函数，接收 createElement 函数作为参数，返回 VNode</li><li>slots, 插槽，可以用来向组件传递内容</li></ul></li><li>生命周期钩子 <ul><li>beforeCreate, 在实例初始化之后，数据观测 (data observer) 和 event/watcher 事件配置之前被调用</li><li>created, 在实例创建完成后被调用</li><li>beforeMount, 在挂载开始之前被调用</li><li>mounted, 在实例挂载之后被调用</li><li>beforeUpdate, 在数据更新时调用，发生在虚拟 DOM 打补丁之前</li><li>updated, 在由于数据更改导致的虚拟 DOM 重新渲染和打补丁之后调用</li><li>beforeDestroy, 在实例销毁之前调用</li><li>destroyed, 在实例销毁之后调用</li><li>activated, 在keep-alive组件激活时调用</li><li>deactivated, 在keep-alive组件停用时调用</li><li>beforeUnmount, 在组件实例被从DOM中移除之前调用</li><li>unmounted, 在组件实例被从DOM中移除之后调用</li><li>errorCaptured, 捕获组件渲染期间的错误，并返回一个函数来处理错误，或者返回 false 以阻止错误继续向上抛出。</li><li>renderTracked, 跟踪依赖项时调用，返回一个函数用来停止跟踪。</li><li>renderTriggered, 触发依赖项重新渲染时调用，返回一个函数用来停止触发。</li></ul></li><li>资源 <ul><li>directives, 自定义指令</li><li>components, 自定义组件</li></ul></li><li>组合 <ul><li>mixins, 组件混入</li><li>extends, 组件扩展</li><li>provide / inject, 跨组件数据共享</li><li>setup, 组合式 API</li></ul></li><li>name, 允许组件模板递归地调用自身</li><li>delimiters, 改变模板的定界符</li><li>inheritAttrs, 继承父组件的属性</li><li>实例property <ul><li>$data</li><li>$props</li><li>$el</li><li>$options</li><li>$parent</li><li>$root</li><li>$children</li><li>$refs</li><li>$slots</li><li>$scopedSlots</li><li>$isServer</li><li>$attrs</li></ul></li><li>实例方法 <ul><li>$watch</li><li>$emit</li><li>$forceUpdate</li><li>$nextTick</li><li>$mount</li></ul></li><li>指令 <ul><li>v-text</li><li>v-html</li><li>v-show</li><li>v-if</li><li>v-else</li><li>v-else-if</li><li>v-for</li><li>v-on</li><li>v-bind</li><li>v-model</li><li>v-slot</li><li>v-pre</li><li>v-once</li><li>v-is</li></ul></li><li></li></ul>',2)]))}const c=l(a,[["render",o]]),u=JSON.parse('{"path":"/guide/vue/vue3-api.html","title":"Vue3 API","lang":"zh-CN","frontmatter":{},"headers":[],"git":{"updatedTime":1750984643000,"contributors":[{"name":"alice","username":"alice","email":"921757697@qq.com","commits":2,"url":"https://github.com/alice"}],"changelog":[{"hash":"545edbbe65660d65a674119255abaf01f9c27a91","time":1750984643000,"email":"921757697@qq.com","author":"alice","message":"deploy uniapp 组件"},{"hash":"99734479504f4e8221319465706636c29ae515c3","time":1748604114000,"email":"921757697@qq.com","author":"alice","message":"deploy vue3"}]},"filePathRelative":"guide/vue/vue3-api.md"}');export{c as comp,u as data};
