import{_ as t,c as e,e as a,a as s,t as l,d as o,o as i}from"./app-DlGl6QFf.js";const c={};function r(p,n){return i(),e("div",null,[n[1]||(n[1]=a('<h1 id="vue3" tabindex="-1"><a class="header-anchor" href="#vue3"><span>vue3</span></a></h1><h2 id="vue-的优势" tabindex="-1"><a class="header-anchor" href="#vue-的优势"><span>vue 的优势</span></a></h2><ul><li>轻量级：几十K的体积</li><li>界面与逻辑分离，与html接近的概念和写法</li><li>响应式双向数据绑定，更新数据时无需再写代码更新界面，反之亦然。</li><li>组件化，可方便协作。方便造轮子，也就自然有大量轮子可用</li><li>虚拟DOM，比大多数手写操作dom的代码都更高效</li><li>易于上手，设计直观、文档丰富</li></ul><p>vue3相比vue2的优势：</p><ul><li>响应式系统提升</li><li>更快，性能比Vue2快1.2~2倍(diff方法优化、静态提升、时间侦听器缓存、ssr渲染)</li><li>更小，按需编译，体积比Vue2更小</li><li>组合式API，提供更灵活的写法，也易于吸引react开发者</li><li>加强TypeScript支持</li></ul><p>uniapp</p><ul><li>文件类型变化 <ul><li>以前是.html文件，现在是.vue文件</li></ul></li><li>文件内代码架构的变化 <ul><li>以前一个 html 大节点，里面有 script 和 style 节点, 现在 template 是一级节点，用于写tag组件， script 和 style 是并列的一级节点，也就是有3个一级节点</li></ul></li><li>外部文件引用方式变化 <ul><li>以前通过script src、link href引入外部的js和css, 现在是es6的写法， import 引入外部的js模块(注意不是文件)或css；</li></ul></li><li>组件/标签的变化 <ul><li>以前是html标签，比如 <code>&lt;div&gt;</code> ，现在是小程序组件，比如 <code>&lt;view&gt;</code></li></ul></li><li>js的变化 <ul><li>以前script里随便写js变量和function</li><li>现在script里默认有export default，在里面写data、事件和method.</li><li><code>export default { data() { return { ... } }, methods: { sayHello(){...}}, onLoad(){...} }</code></li><li>以前的 DOM 操作，比如 document.getElementById(&#39;id&#39;)，现在是 this.$refs.id</li><li>现在的做法，是vue的绑定模式, v-bind:id=&quot;id&quot;，v-on:click=&quot;sayHello&quot;</li></ul></li></ul><h2 id="模板语法" tabindex="-1"><a class="header-anchor" href="#模板语法"><span>模板语法</span></a></h2>',8)),s("ul",null,[s("li",null,"插值, 文本, "+l(p.msg)+", data(){return{msg: 'hello'}}",1),n[0]||(n[0]=s("li",null,[o("指令, v-前缀, v-for, v-if, v-model, v-show, v-text, v-html, v-bind, :, @ "),s("ul",null,[s("li",null,'v-bind, 绑定属性, :name="value"'),s("li",null,'v-on, 绑定事件, @click="handleClick"'),s("li",null,"v-once, 只渲染一次, 适用于性能优化"),s("li",null,"v-html, 绑定html, 适用于展示富文本"),s("li",null,'v-for, 循环, v-for="(item, index) in items"')])],-1))]),n[2]||(n[2]=a(`<h2 id="data-选项" tabindex="-1"><a class="header-anchor" href="#data-选项"><span>data 选项</span></a></h2><ul><li>只接受返回一个初始数据对象的函数</li><li>data() { return { count: 0 } }</li><li>页面关闭时, 数据自动销毁</li></ul><h2 id="class-与-style-绑定" tabindex="-1"><a class="header-anchor" href="#class-与-style-绑定"><span>Class 与 Style 绑定</span></a></h2><ul><li>:class=&quot;{ active: isActive, &#39;text-danger&#39;: hasError }&quot;</li><li>:class=&quot;[activeClass, errorClass]&quot;</li><li>:class=&quot;computedClassStr&quot;, computedClassStr是计算属性, 返回一个字符串</li><li>:style=&quot;{ color: activeColor, fontSize: fontSize + &#39;px&#39; }&quot;</li><li>:style=&quot;styleObj&quot;,styleObj是data里的一个对象, 里面可以有多个样式属性</li><li>:style=&quot;[styleObj1, styleObj2]&quot;</li><li>:style=&quot;{ display: [&#39;-webkit-box&#39;, &#39;-ms-flexbox&#39;, &#39;flex&#39;] }&quot;</li></ul><h2 id="条件渲染" tabindex="-1"><a class="header-anchor" href="#条件渲染"><span>条件渲染</span></a></h2><ul><li>v-if, v-else, v-else-if, v-show <ul><li>v-show, 切换元素的 display:none, 适用于频繁切换的场景, 元素存在,只是display: none</li><li>v-if, 条件判断, 只有在条件为真时才渲染该元素</li><li>v-else, 条件为假时渲染该元素</li><li>v-else-if, 条件为假时渲染该元素, 只有在前面的条件都不满足时才渲染该元素</li><li>v-if 可用于 template 中</li></ul></li></ul><h2 id="列表渲染" tabindex="-1"><a class="header-anchor" href="#列表渲染"><span>列表渲染</span></a></h2><ul><li>v-for <ul><li>v-for=&quot;(item, index) in items&quot;, 遍历数组, item表示当前项, index表示索引</li><li>v-for=&quot;(value, key, index) in object&quot;, 遍历对象, value表示值, key表示键, index表示索引</li><li>templte v-for, 遍历数组, 数组元素的属性值可以用 item.xxx 访问</li><li><code>&lt;view v-for=&quot;(item,index) in objectArray&quot; :key=&quot;item.id&quot;&gt;</code></li><li>template v-for=&quot;item in list&quot; :key=&quot;item.id&quot;</li><li><code>&lt;my-component v-for=&quot;item in items&quot; :key=&quot;item.id&quot;&gt;&lt;/my-component&gt;</code></li><li><code>&lt;view v-for=&quot;todo in todos&quot; v-if=&quot;!todo.isComplete&quot;&gt;</code>错误，因为未在实例上定义属性“todo”</li><li><code>&lt;template v-for=&quot;todo in todos&quot;&gt; &lt;view v-if=&quot;!todo.isComplete&quot;&gt; {{ todo }} &lt;/view&gt; &lt;/template&gt;</code></li></ul></li></ul><h2 id="事件处理" tabindex="-1"><a class="header-anchor" href="#事件处理"><span>事件处理</span></a></h2><ul><li>v-on</li><li>@click=&quot;handleClick&quot;, methods: { handleClick() { ... } }</li><li>@click.stop, 阻止事件冒泡</li><li>@click.prevent, 阻止默认事件</li><li>@click.capture, 事件捕获</li><li>@click.self, 只有点击当前元素时触发</li><li>事件处理方法, @click=&quot;handleClick()&quot;, methods: { handleClick(event) { ... } }</li><li>传参, @click=&quot;handleClick(id)&quot;</li><li>传原始DOM事件, @click=&quot;handleClick($event)&quot;, event.target 获取触发事件的元素</li><li>多事件处理器, @click=&quot;one($event); two($event)&quot;</li><li>事件修饰符, @click.stop, @click.prevent, @click.capture, @click.self</li><li>事件映射表 <ul><li>WEB 事件: <code>uni-app</code> 对应事件</li><li>click: tap</li><li>tap: tap</li><li>touchstart: touchstart</li><li>touchmove: touchmove</li><li>touchend: touchend</li><li>input: input</li><li>change: change</li><li>submit: submit</li><li>focus: focus</li><li>reset: reset</li><li>confirm: confirm</li></ul></li></ul><h2 id="表单输入绑定" tabindex="-1"><a class="header-anchor" href="#表单输入绑定"><span>表单输入绑定</span></a></h2><ul><li>v-model</li><li>uni-app 表单组件, select-picker, radio-radio-group</li></ul><h2 id="计算属性和侦听器" tabindex="-1"><a class="header-anchor" href="#计算属性和侦听器"><span>计算属性和侦听器</span></a></h2><ul><li>computed</li><li>watch</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span>view<span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span>view<span class="token operator">&gt;</span>OHas published books<span class="token operator">:</span><span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span>view<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span> publishedBooksMessage <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span>view<span class="token operator">&gt;</span>Full Name<span class="token operator">:</span><span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span>view<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span> fullName <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span>view<span class="token operator">&gt;</span>First Name<span class="token operator">:</span><span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">&quot;text&quot;</span> v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">&quot;firstName&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span>view<span class="token operator">&gt;</span>Last Name<span class="token operator">:</span><span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">&quot;text&quot;</span> v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">&quot;lastName&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;john&#39;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token literal-property property">books</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">                    <span class="token string">&#39;Vue 2- Advanced Guide&#39;</span><span class="token punctuation">,</span></span>
<span class="line">                    <span class="token string">&#39;Vue 3 - Basic Guide&#39;</span><span class="token punctuation">,</span></span>
<span class="line">                    <span class="token string">&#39;Vue 4 - The Mystery&#39;</span></span>
<span class="line">                <span class="token punctuation">]</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token literal-property property">firstName</span><span class="token operator">:</span> <span class="token string">&#39;John&#39;</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token literal-property property">lastName</span><span class="token operator">:</span> <span class="token string">&#39;Doe&#39;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">publishedBooksMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>author<span class="token punctuation">.</span>books<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">O has published </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>author<span class="token punctuation">.</span>books<span class="token punctuation">.</span>length<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> books</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token string">&#39;O has not published any books yet&#39;</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token function">fullName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>firstName <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lastName<span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token function">set</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">let</span> names <span class="token operator">=</span> newValue<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token keyword">this</span><span class="token punctuation">.</span>firstName <span class="token operator">=</span> names<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token keyword">this</span><span class="token punctuation">.</span>lastName <span class="token operator">=</span> names<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>计算属性缓存 vs 方法</p></li><li><p>计算属性的 getter 和 setter, 是可以缓存的</p></li><li><p>计算属性在相关变量发生改变时才会重新求值</p></li><li><p>computed: { now: () =&gt; Date.now() }, 缓存之后不变</p></li><li><p>调用方法,同样可以实现这个功能,但是每次都会执行函数</p></li><li><p>watch, 响应数据的变化, 当需要在数据变化时执行异步或开销较大的操作时</p></li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span>view<span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">&quot;number&quot;</span> v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">&quot;a&quot;</span> style<span class="token operator">=</span><span class="token string">&quot;border: red solid 1px;&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">&quot;number&quot;</span> v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">&quot;b&quot;</span> style<span class="token operator">=</span><span class="token string">&quot;border: red solid 1px;&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span>view<span class="token operator">&gt;</span>总和：<span class="token punctuation">{</span><span class="token punctuation">{</span>sum<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span>button type<span class="token operator">=</span><span class="token string">&quot;default&quot;</span> @click<span class="token operator">=</span><span class="token string">&quot;add&quot;</span> <span class="token operator">&gt;</span>求和<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">&quot;number&quot;</span> v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">&quot;obj.a&quot;</span> style<span class="token operator">=</span><span class="token string">&quot;border: red solid 1px;&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">&quot;number&quot;</span> v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">&quot;obj.b&quot;</span> style<span class="token operator">=</span><span class="token string">&quot;border: red solid 1px;&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span>view<span class="token operator">&gt;</span>总和：<span class="token punctuation">{</span><span class="token punctuation">{</span>sum1<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span>button type<span class="token operator">=</span><span class="token string">&quot;default&quot;</span> @click<span class="token operator">=</span><span class="token string">&quot;add1&quot;</span> <span class="token operator">&gt;</span>求和<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token literal-property property">sum</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token literal-property property">obj</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token literal-property property">a1</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">                    <span class="token literal-property property">b1</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token literal-property property">sum1</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">watch</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">//使用watch来响应数据的变化，第一个参数为newVal新值，第二个参数oldVal为旧值</span></span>
<span class="line">            <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">handler</span><span class="token punctuation">(</span><span class="token parameter">newVal<span class="token punctuation">,</span> oldVal</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;a------: &quot;</span><span class="token punctuation">,</span> newVal<span class="token punctuation">,</span> oldVal<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token literal-property property">immediate</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token comment">//初始化绑定时就会执行handler方法</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">handler</span><span class="token punctuation">(</span><span class="token parameter">newVal<span class="token punctuation">,</span> oldVal</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;b------: &quot;</span><span class="token punctuation">,</span> newVal<span class="token punctuation">,</span> oldVal<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token literal-property property">immediate</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token comment">//初始化绑定时就会执行handler方法</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token literal-property property">obj</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">handler</span><span class="token punctuation">(</span><span class="token parameter">newVal<span class="token punctuation">,</span> oldVal</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;obj-newVal:&#39;</span> <span class="token operator">+</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>newVal<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;obj-oldVal:&#39;</span> <span class="token operator">+</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>oldVal<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token literal-property property">deep</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token comment">//深度监听，监听对象内部的变化</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">this</span><span class="token punctuation">.</span>sum <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>a<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>b<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token function">add1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">this</span><span class="token punctuation">.</span>sum1 <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>obj<span class="token punctuation">.</span>a<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>obj<span class="token punctuation">.</span>b<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17))])}const k=t(c,[["render",r]]),d=JSON.parse('{"path":"/guide/vue/vue3.html","title":"vue3","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"vue 的优势","slug":"vue-的优势","link":"#vue-的优势","children":[]},{"level":2,"title":"模板语法","slug":"模板语法","link":"#模板语法","children":[]},{"level":2,"title":"data 选项","slug":"data-选项","link":"#data-选项","children":[]},{"level":2,"title":"Class 与 Style 绑定","slug":"class-与-style-绑定","link":"#class-与-style-绑定","children":[]},{"level":2,"title":"条件渲染","slug":"条件渲染","link":"#条件渲染","children":[]},{"level":2,"title":"列表渲染","slug":"列表渲染","link":"#列表渲染","children":[]},{"level":2,"title":"事件处理","slug":"事件处理","link":"#事件处理","children":[]},{"level":2,"title":"表单输入绑定","slug":"表单输入绑定","link":"#表单输入绑定","children":[]},{"level":2,"title":"计算属性和侦听器","slug":"计算属性和侦听器","link":"#计算属性和侦听器","children":[]}],"git":{"updatedTime":1753237474000,"contributors":[{"name":"alice","username":"alice","email":"921757697@qq.com","commits":7,"url":"https://github.com/alice"}],"changelog":[{"hash":"245816fee7920b84913505a4353b6b4f934da7c0","time":1753237474000,"email":"921757697@qq.com","author":"alice","message":"uniapp 组件"},{"hash":"99734479504f4e8221319465706636c29ae515c3","time":1748604114000,"email":"921757697@qq.com","author":"alice","message":"deploy vue3"},{"hash":"069a6964a7b2c38a45febdd782262b18941eb815","time":1748013184000,"email":"921757697@qq.com","author":"alice","message":"deploy vue3"},{"hash":"b76da10ee718506b403f597aa5e358ba4a946939","time":1744908373000,"email":"921757697@qq.com","author":"alice","message":"vue"},{"hash":"6865a6735449381c1fba9a14aa9ad0c9bd2e80fc","time":1744907061000,"email":"921757697@qq.com","author":"alice","message":"deploy"},{"hash":"d0aa97b762c5a828ab8e3a7802989f2039337caf","time":1744888563000,"email":"921757697@qq.com","author":"alice","message":"deploy"},{"hash":"074e85f856de4890994d6061e901cce856e9d61e","time":1743345460000,"email":"921757697@qq.com","author":"alice","message":"deploy"}]},"filePathRelative":"guide/vue/vue3.md"}');export{k as comp,d as data};
